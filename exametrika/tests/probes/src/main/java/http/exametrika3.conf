{	
	imports = ["logging.conf"]

	profiler:
	{
		permanentScopes:
		{
			scope1:
			{
			}
		}
		probes:
		{
			http1:
			{
				instanceOf = "HttpServletProbe"
				warmupDelay = 0
				maxDuration = 10000
				primaryEntryPointExpression = "servlet.servletContext.servletContextName == 'testApp1'"
				requestMappingStrategy:
				{
					instanceOf = "CompositeRequestMappingStrategy"
					strategies:
					[
					 	{
					 		instanceOf = "ThresholdRequestMappingStrategy"
				 			nameExpression = "'threshold:' + urlWithQueryString"
			 				metadataExpression = "{'requestType':'threshold', 'url':urlWithQueryString, 'servlet':servlet.servletName,\
		 						'app':servlet.servletContext.servletContextName}"
		 					parametersExpression = "{'url':urlWithQueryString, 'servlet':servlet.servletName,\
		 						'app':servlet.servletContext.servletContextName}"
	 						threshold = 100000000
	 						//measurementPeriod = 60000
					 	},
					 	{
					 		instanceOf = "HotspotRequestMappingStrategy"
				 			nameExpression = "'hotspot:' + url"
			 				metadataExpression = "{'requestType':'hotspot', 'url':url, 'servlet':servlet.servletName,\
		 						'app':servlet.servletContext.servletContextName}"
		 					parametersExpression = "{'url':urlWithQueryString, 'servlet':servlet.servletName,\
		 						'app':servlet.servletContext.servletContextName}"
	 						minHotspotCount = 20
	 						maxHotspotCount = 20
	 						//measurementPeriod = 60000
					 	},
					 	{
					 		instanceOf = "SimpleRequestMappingStrategy"
				 			nameExpression = "'app:' + request.contextPath"
			 				metadataExpression = "{'requestType':'app', 'app:' + request.contextPath, \
			 					'servletContext':servlet.servletContext.servletContextName}"
		 					parametersExpression = "{'url':urlWithQueryString, 'servlet':servlet.servletName,\
		 						'app':servlet.servletContext.servletContextName}"
					 	}
					]
				}
			}
			
			http2:
			{
				instanceOf = "HttpConnectionProbe"
				warmupDelay = 0
				requestMappingStrategy:
				{
					instanceOf = "CompositeRequestMappingStrategy"
					strategies:
					[
					 	{
					 		instanceOf = "ThresholdRequestMappingStrategy"
				 			nameExpression = "'threshold:' + urlWithQueryString"
			 				metadataExpression = "{'requestType':'threshold', 'url':urlWithQueryString}"
		 					parametersExpression = "{'url':urlWithQueryString}"
		 					threshold = 100000000
		 					//measurementPeriod = 60000
					 	},
					 	{
					 		instanceOf = "HotspotRequestMappingStrategy"
				 			nameExpression = "'hotspot:' + url"
			 				metadataExpression = "{'requestType':'hotspot', 'url':url}"
		 					parametersExpression = "{'url':urlWithQueryString}"
		 					minHotspotCount = 20
	 						maxHotspotCount = 20
	 						//measurementPeriod = 60000
					 	},
					 	{
					 		instanceOf = "SimpleRequestMappingStrategy"
				 			nameExpression = "'app:' + hostPort"
			 				metadataExpression = "{'requestType':'app', 'app:' + hostPort}"
		 					parametersExpression = "{'url':urlWithQueryString}"
					 	}
					]
				}
			}
			
			httpStack:
			{
				instanceOf = "StackProbe"
				//maxEstimationPeriod = 60000	
				intercepted:
				{
					class:
					{
						include = ["*TestServlet*", "*Test*HttpClient*"]
					}
					method = "*"
				}
				stackCounters:
				[
					{
				 		instanceOf = "AppStackCounter"
				 		type = "errorsCount"
					}
				]
			}
		}
		
		dump = ["fullState"/*, "measurements"*/]
		maxInstrumentedMethodsCount = 500000
		//timeSource = "threadCpuTime"
	}
	
	instrumentation:
	{
		debug = true
	}
}

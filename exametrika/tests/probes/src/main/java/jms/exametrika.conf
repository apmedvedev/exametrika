{	
	imports = ["logging.conf"]

	profiler:
	{
		permanentScopes:
		{
			scope1:
			{
			}
		}
		probes:
		{
			jmsProducer:
			{
				instanceOf = "JmsProducerProbe"
				warmupDelay = 0
			}	
			
			jmsHttp1:
			{
				instanceOf = "HttpServletProbe"
				warmupDelay = 0
				maxDuration = 10000
				primaryEntryPointExpression = "servlet.servletContext.servletContextName == 'testApp1'"
				requestMappingStrategy:
				{
					instanceOf = "SimpleRequestMappingStrategy"
		 			nameExpression = "'app:' + request.contextPath"
	 				metadataExpression = "{'requestType':'app', 'app:' + request.contextPath, \
	 					'servletContext':servlet.servletContext.servletContextName}"
 					parametersExpression = "{'url':urlWithQueryString, 'servlet':servlet.servletName,\
 						'app':servlet.servletContext.servletContextName}"
				}
			}
			
			jmsHttp2:
			{
				instanceOf = "HttpConnectionProbe"
				warmupDelay = 0
				requestMappingStrategy:
				{
			 		instanceOf = "SimpleRequestMappingStrategy"
		 			nameExpression = "'app:' + hostPort"
	 				metadataExpression = "{'requestType':'app', 'app:' + hostPort}"
 					parametersExpression = "{'url':urlWithQueryString}"
				}
			}
			
			jmsStack:
			{
				instanceOf = "StackProbe"
				intercepted:
				{
					class:
					{
						include = ["*TestServlet*", "*Test*HttpClient*", "*Test*JmsConsumer*", "*Test*JmsProducer*"]
					}
					method = "*"
				}
			}
			
			jmsConsumer:
			{
				instanceOf = "JmsConsumerProbe"
				warmupDelay = 0
			}
		}
		
		dump = ["fullState"/*, "measurements"*/]
		maxInstrumentedMethodsCount = 500000
		//timeSource = "threadCpuTime"
	}
	
	instrumentation:
	{
		debug = true
	}
}

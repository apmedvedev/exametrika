{	
	modules:
	{
		module1:
		{
			version = "1.0.0"
			schema:
			{
				instanceOf = "ComponentModel"
				components:
				{
					HealthComponent:
					{
						instanceOf = "agent"
						profilerConfigurationName = "${resource.path}/profiler.conf"
						healthComponentType = "HealthComponentType"
						aggregationSchema:
						{
							p2:
							{
								HealthComponentType:
								{
									instanceOf = "NameComponentType"
									metricTypes:
									{
									    totalCounter:
                                        {
                                            instanceOf = "Counter"
                                        }
										upCounter:
										{
											instanceOf = "Counter"
										}
									
										downCounter:
										{
											instanceOf = "Counter"
										}
											
										failureCounter:
										{
											instanceOf = "Counter"
										}
											
										maintenanceCounter:
										{
											instanceOf = "Counter"
										}
									}
								}
							}
						}
					}
		
					Host:
					{
						instanceOf = "host"
						healthComponentType = "HealthComponentType"
						profilerConfigurationName = "${resource.path}/profiler.conf"
						aggregationSchema:
						{
							p2:
							{
								Host:
								{
									instanceOf = "NameComponentType"
									metricTypes:
									{
										metricType1:
										{
											instanceOf = "Gauge"
											fields:
											[
											 	{ instanceOf = "StandardFields" },
											 	{ instanceOf = "UniformHistogramFields" maxBound = 100 binCount = 10 },
											 	{ 
											 		instanceOf = "AnomalyFields"
										 			name = "anomaly(percentile(50))"
									 				baseRepresentation = "default"
								 					baseField = "histo.percentile(50).value"
									 			},
									 			{ 
											 		instanceOf = "ForecastFields"
										 			name = "forecast(percentile(75))"
									 				baseRepresentation = "default"
								 					baseField = "histo.percentile(75).value"
									 			}
											]
											representations:
											{
												"default":
												{
													fields:
													[
													 	{ instanceOf = "StandardRepresentation" },
													 	{ instanceOf = "UniformHistogramRepresentation" maxBound = 100 binCount = 10},
													 	{ instanceOf = "AnomalyRepresentation" name = "anomaly(percentile(50))"},
													 	{ instanceOf = "ForecastRepresentation" name = "forecast(percentile(75)"}
													]
												}
											}
										}
									}
								}
							}
						}
						actions:
						{
							log:
							{
								instanceOf = "LogAction"
							}
						
							localHost:
							{
								instanceOf = "TestLocalAction"
							}
								
							remoteHost:
							{
								instanceOf = "TestRemoteAction"
							}
						}
					}
					
					Node:
					{
						instanceOf = "node"
						healthComponentType = "HealthComponentType"
						profilerConfigurationName = "${resource.path}/profiler.conf"
						aggregationSchema:
						{
							p2:
							{
								Node:
								{
									instanceOf = "NameComponentType"
									metricTypes:
									{
										metricType1:
										{
											instanceOf = "Gauge"
										}
									}
								}
							}
						}
						actions:
						{
							log:
							{
								instanceOf = "LogAction"
							}
						
							localHost:
							{
								instanceOf = "TestLocalAction"
							}
								
							remoteHost:
							{
								instanceOf = "TestRemoteAction"
							}
						}
					}
		
					Transaction:
					{
						instanceOf = "transaction"
					    healthComponentType = "HealthComponentType"
						aggregationSchema:
						{
							p2:
							{
								Transaction:
								{
									instanceOf = "NameComponentType"
									metricTypes:
									{
										metricType1:
										{
											instanceOf = "Gauge"
										}
									}
								}
							}
						}
					}
						
					Group:
					{
						instanceOf = "group"
					}
						
					AggregationGroup:
					{
						instanceOf = "group"
					}
				}
			}
		}
	}
}	
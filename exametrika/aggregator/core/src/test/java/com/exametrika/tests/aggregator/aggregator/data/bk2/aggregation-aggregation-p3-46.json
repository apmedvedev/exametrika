{
    "cyclePeriod ": 
    {
        "<root>": 
        {
            "id": "3@aggregation-aggregation-p3-46/data-47.cy[cycle]",
            "scope": "",
            "metric": ""
        },
        "<orphaned>": 
        [
            {
                "id": "21@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b.root",
                "metric": "",
                "componentType": "txRootLog",
                "measurements": 
                [
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.6"
                }
            },
            {
                "id": "26@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b.root",
                "metric": "",
                "componentType": "txRootError",
                "measurements": 
                [
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.7"
                }
            },
            {
                "id": "31@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.6",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "36@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.7",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "41@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.6",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "46@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.7",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "51@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.6",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "56@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.7",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "61@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-0019-0000-00000000001a",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ]
            },
            {
                "id": "66@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-0019-0000-00000000001a",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "71@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-001d-0000-00000000001e",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "76@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-001d-0000-00000000001e",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "81@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-001b-0000-00000000001c",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "86@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-001b-0000-00000000001c",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "91@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a",
                "metric": "",
                "componentType": "txRootLog",
                "measurements": 
                [
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    }
                ]
            },
            {
                "id": "96@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a",
                "metric": "",
                "componentType": "txRootError",
                "measurements": 
                [
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "101@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ]
            },
            {
                "id": "106@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "111@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.00000000-0000-0023-0000-000000000024",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "116@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.00000000-0000-0023-0000-000000000024",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "121@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "126@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "131@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b",
                "metric": "",
                "componentType": "txRootLog",
                "measurements": 
                [
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txRootLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    }
                ]
            },
            {
                "id": "136@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b",
                "metric": "",
                "componentType": "txRootError",
                "measurements": 
                [
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txRootError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "141@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b.root",
                "metric": "",
                "componentType": "anomaliesLog",
                "measurements": 
                [
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 0,
                            "componentType": "app.stack.root",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 9,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 11,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 13,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 13,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 9,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 19,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 19,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 0,
                            "componentType": "app.stack.root",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 9,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 11,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 13,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 13,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 9,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 19,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 19,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    }
                ]
            },
            {
                "id": "146@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a",
                "metric": "",
                "componentType": "anomaliesLog",
                "measurements": 
                [
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 0,
                            "componentType": "app.stack.root",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 84,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 129,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 129,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 89,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 132,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 132,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 132,
                            "metricId": 84,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 135,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 135,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 0,
                            "componentType": "app.stack.root",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 84,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 183,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 183,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 89,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 186,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 186,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 186,
                            "metricId": 84,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 189,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 189,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    }
                ]
            },
            {
                "id": "151@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b",
                "metric": "",
                "componentType": "anomaliesLog",
                "measurements": 
                [
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 55,
                            "metricId": 0,
                            "componentType": "app.stack.root",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 55,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 55,
                            "metricId": 97,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 138,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 138,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 55,
                            "metricId": 102,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 141,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 141,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 141,
                            "metricId": 107,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 144,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 144,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 55,
                            "metricId": 0,
                            "componentType": "app.stack.root",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 55,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 55,
                            "metricId": 97,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 192,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 192,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 55,
                            "metricId": 102,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 195,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 195,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 195,
                            "metricId": 107,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 198,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 198,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    }
                ]
            },
            {
                "id": "156@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-003d-0000-00000000003e",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ]
            },
            {
                "id": "161@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-003d-0000-00000000003e",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "166@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-0041-0000-000000000042",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "171@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-0041-0000-000000000042",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "176@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-003f-0000-000000000040",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "181@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-003f-0000-000000000040",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "186@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ]
            },
            {
                "id": "191@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "196@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.00000000-0000-0047-0000-000000000048",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "201@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.00000000-0000-0047-0000-000000000048",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "206@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "211@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            }
        ]
    },
    "period 0": 
    {
        "<root>": 
        {
            "id": "6@aggregation-aggregation-p3-46/data-46.dt[0]",
            "scope": "",
            "metric": "",
            "nodes": 
            [
                {
                    "id": "557@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "txRootError",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 4,
                            "std.sum": 4,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "572@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txRootError.TestException1&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "587@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txRootError.TestException1&.class1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "602@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a",
                                            "metric": "txRootError.TestException1&.class1.method1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.b, location:txRootError.TestException1&.class1.method1 (662@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b, location:txRootError.TestException1&.class1 (647@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.b, location:txRootError.TestException1& (632@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "617@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "txRootError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "632@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "txRootError.TestException1&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "647@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b",
                                            "metric": "txRootError.TestException1&.class1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "662@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.b",
                                                    "metric": "txRootError.TestException1&.class1.method1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.b.root, location:txRootError.TestException1&.class1.method1 (403@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.b.root, location:txRootError.TestException1&.class1 (707@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b.root, location:txRootError.TestException1& (692@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "677@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.root",
                                    "metric": "txRootError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "692@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.root",
                                            "metric": "txRootError.TestException1&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "707@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.b.root",
                                                    "metric": "txRootError.TestException1&.class1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "403@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.b.root",
                                                            "metric": "txRootError.TestException1&.class1.method1",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 4,
                                                                    "std.sum": 4,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "app.stack.root"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "722@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "txRootError&",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 4,
                            "std.sum": 4,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "737@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txRootError&.class1",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "752@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txRootError&.class1.testMethod1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b, location:txRootError&.class1.testMethod1 (797@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.b, location:txRootError&.class1 (782@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "767@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "txRootError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "782@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "txRootError&.class1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "797@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b",
                                            "metric": "txRootError&.class1.testMethod1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.b.root, location:txRootError&.class1.testMethod1 (418@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b.root, location:txRootError&.class1 (827@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "812@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.root",
                                    "metric": "txRootError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "827@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.root",
                                            "metric": "txRootError&.class1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "418@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.b.root",
                                                    "metric": "txRootError&.class1.testMethod1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "app.stack.root"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "842@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "txSecondaryError",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 6,
                            "std.sum": 6,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "857@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError.TestException2&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "872@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError.TestException2&.class21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "887@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a",
                                            "metric": "txSecondaryError.TestException2&.class21.method21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c, location:txSecondaryError.TestException2&.class21.method21 (947@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError.TestException2&.class21 (932@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError.TestException2& (917@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        },
                        {
                            "id": "1204@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError.TestException3&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1219@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError.TestException3&.class31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1234@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a",
                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c, location:txSecondaryError.TestException3&.class31.method31 (1279@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError.TestException3&.class31.method31 (1474@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError.TestException3&.class31 (1264@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError.TestException3&.class31 (1459@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError.TestException3& (1249@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError.TestException3& (1444@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "902@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "txSecondaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "917@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError.TestException2&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "932@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError.TestException2&.class21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "947@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c",
                                                    "metric": "txSecondaryError.TestException2&.class21.method21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2&.class21.method21 (433@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2&.class21 (992@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2& (977@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "1249@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError.TestException3&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1264@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError.TestException3&.class31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "1279@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c",
                                                    "metric": "txSecondaryError.TestException3&.class31.method31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3&.class31.method31 (478@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3&.class31 (1324@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3& (1309@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "962@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "977@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError.TestException2&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "992@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError.TestException2&.class21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "433@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                            "metric": "txSecondaryError.TestException2&.class21.method21",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "id": "1294@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1309@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                            "metric": "txSecondaryError.TestException3&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "1324@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                    "metric": "txSecondaryError.TestException3&.class31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "478@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "1429@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.d",
                            "metric": "txSecondaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1444@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.d",
                                    "metric": "txSecondaryError.TestException3&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1459@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError.TestException3&.class31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "1474@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d",
                                                    "metric": "txSecondaryError.TestException3&.class31.method31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3&.class31.method31 (512@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3&.class31 (1519@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3& (1504@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "1489@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1504@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "metric": "txSecondaryError.TestException3&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "1519@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError.TestException3&.class31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "512@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "1007@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "txSecondaryError&",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 10,
                            "std.sum": 10,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "1024@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass21",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1039@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass21.testMethod21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass21.testMethod21 (1084@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass21 (1069@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        },
                        {
                            "id": "1129@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass23",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1144@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass23.testMethod23",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass23.testMethod23 (1174@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass23 (1159@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        },
                        {
                            "id": "1339@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass31",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 6,
                                    "std.sum": 6,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1354@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass31.testMethod31 (1384@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError&.testClass31.testMethod31 (1566@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "1611@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass31.testMethod33",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.d, location:txSecondaryError&.testClass31.testMethod33 (1626@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass31 (1369@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError&.testClass31 (1551@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "1054@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "txSecondaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 6,
                                    "std.sum": 6,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1069@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1084@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass21.testMethod21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass21.testMethod21 (448@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass21 (1114@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "1159@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass23",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1174@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass23.testMethod23",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass23.testMethod23 (463@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass23 (1189@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "1369@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1384@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass31.testMethod31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError&.testClass31.testMethod31 (493@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError&.testClass31 (1414@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "1099@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1114@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError&.testClass21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "448@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError&.testClass21.testMethod21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "id": "1189@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError&.testClass23",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "463@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError&.testClass23.testMethod23",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "id": "1399@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1414@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                            "metric": "txSecondaryError&.testClass31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "493@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "1536@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.d",
                            "metric": "txSecondaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1551@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.d",
                                    "metric": "txSecondaryError&.testClass31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1566@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError&.testClass31.testMethod31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31.testMethod31 (527@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        },
                                        {
                                            "id": "1626@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError&.testClass31.testMethod33",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31.testMethod33 (542@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31 (1596@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "1581@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1596@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "metric": "txSecondaryError&.testClass31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "527@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                },
                                                {
                                                    "id": "542@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError&.testClass31.testMethod33",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "1641@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "",
                    "componentType": "app.stack.root",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 20,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 20,
                                "std.avg": 4,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 20,
                                "std.sum": 2000,
                                "std.min": 20,
                                "std.max": 30,
                                "std.avg": 100,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.1"
                    },
                    "children": 
                    [
                        {
                            "id": "1662@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶exit",
                            "componentType": "txExit",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack"
                            }
                        },
                        {
                            "id": "1675@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶syncExit.a",
                            "componentType": "txIntermediateExit",
                            "flags": "[derived, sync, scopeInner]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                "type": "sync"
                            },
                            "childEntryPoint": 
                            {
                                "id": "1689@aggregation-aggregation-p3-46/data-46.dt[0]",
                                "scope": "a.00000000-0000-0019-0000-00000000001a",
                                "metric": "",
                                "componentType": "txSecondary",
                                "flags": "[derived, sync, scopeInner]",
                                "measurements": 
                                {
                                    "metricType1": 
                                    {
                                        "inherent": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 80,
                                            "std.min": 1,
                                            "std.max": 20,
                                            "std.avg": 4,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        },
                                        "total": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 2000,
                                            "std.min": 20,
                                            "std.max": 30,
                                            "std.avg": 100,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        }
                                    },
                                    "metricType2": "error"
                                },
                                "metadata": 
                                {
                                    "key": "value-1.1"
                                },
                                "children": 
                                [
                                    {
                                        "id": "1711@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-0019-0000-00000000001a",
                                        "metric": "metric1⟶metric2⟶exit",
                                        "componentType": "txExit",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "logs": 
                                [
                                    {
                                        "id": "1724@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-0019-0000-00000000001a",
                                        "metric": "",
                                        "componentType": "txSecondaryLog",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryLog": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.6",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "1732@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-0019-0000-00000000001a",
                                        "metric": "",
                                        "componentType": "txSecondaryError",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryError": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.7",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "scopeChildren": 
                                ["scope:a.c.00000000-0000-001f-0000-000000000020, location: (1934@aggregation-aggregation-p3-46/data-46.dt[0])"]
                            }
                        },
                        {
                            "id": "1740@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶asyncExit.a",
                            "componentType": "txIntermediateExit",
                            "flags": "[derived, scopeInner]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                "type": "async"
                            },
                            "childEntryPoint": 
                            {
                                "id": "1754@aggregation-aggregation-p3-46/data-46.dt[0]",
                                "scope": "a.00000000-0000-001b-0000-00000000001c",
                                "metric": "",
                                "componentType": "txSecondary",
                                "flags": "[derived, scopeInner]",
                                "measurements": 
                                {
                                    "metricType1": 
                                    {
                                        "inherent": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 80,
                                            "std.min": 1,
                                            "std.max": 20,
                                            "std.avg": 4,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        },
                                        "total": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 2000,
                                            "std.min": 20,
                                            "std.max": 30,
                                            "std.avg": 100,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        }
                                    },
                                    "metricType2": "error"
                                },
                                "metadata": 
                                {
                                    "key": "value-1.1"
                                },
                                "children": 
                                [
                                    {
                                        "id": "1776@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-001b-0000-00000000001c",
                                        "metric": "metric1⟶metric2⟶exit",
                                        "componentType": "txExit",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "1789@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-001b-0000-00000000001c",
                                        "metric": "metric1⟶metric2⟶syncExit.a",
                                        "componentType": "txIntermediateExit",
                                        "flags": "[derived, sync, scopeInner]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary",
                                            "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "type": "sync"
                                        },
                                        "childEntryPoint": 
                                        {
                                            "id": "1803@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.00000000-0000-001d-0000-00000000001e",
                                            "metric": "",
                                            "componentType": "txSecondary",
                                            "flags": "[derived, sync, scopeInner]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 80,
                                                        "std.min": 1,
                                                        "std.max": 20,
                                                        "std.avg": 4,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 2000,
                                                        "std.min": 20,
                                                        "std.max": 30,
                                                        "std.avg": 100,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.1"
                                            },
                                            "children": 
                                            [
                                                {
                                                    "id": "1825@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.00000000-0000-001d-0000-00000000001e",
                                                    "metric": "metric1⟶metric2⟶exit",
                                                    "componentType": "txExit",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "inherent": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 20,
                                                                "std.min": 1,
                                                                "std.max": 10,
                                                                "std.avg": 1,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            },
                                                            "total": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 20,
                                                                "std.min": 1,
                                                                "std.max": 10,
                                                                "std.avg": 1,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metricType2": "error"
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.4",
                                                        "parent": "txStack",
                                                        "entry": "txSecondary"
                                                    }
                                                }
                                            ],
                                            "logs": 
                                            [
                                                {
                                                    "id": "1838@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.00000000-0000-001d-0000-00000000001e",
                                                    "metric": "",
                                                    "componentType": "txSecondaryLog",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "txSecondaryLog": ""
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.6",
                                                        "entry": "txSecondary"
                                                    }
                                                },
                                                {
                                                    "id": "1846@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.00000000-0000-001d-0000-00000000001e",
                                                    "metric": "",
                                                    "componentType": "txSecondaryError",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "txSecondaryError": ""
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.7",
                                                        "entry": "txSecondary"
                                                    }
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.d.00000000-0000-0023-0000-000000000024, location: (2048@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    }
                                ],
                                "logs": 
                                [
                                    {
                                        "id": "1854@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-001b-0000-00000000001c",
                                        "metric": "",
                                        "componentType": "txSecondaryLog",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryLog": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.6",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "1862@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-001b-0000-00000000001c",
                                        "metric": "",
                                        "componentType": "txSecondaryError",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryError": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.7",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "scopeChildren": 
                                ["scope:a.c.00000000-0000-0021-0000-000000000022, location: (1999@aggregation-aggregation-p3-46/data-46.dt[0])"]
                            }
                        }
                    ],
                    "logs": 
                    [
                        {
                            "id": "1870@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "",
                            "componentType": "txRootLog",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "txRootLog": ""
                            },
                            "metadata": 
                            {
                                "key": "value-1.6"
                            }
                        },
                        {
                            "id": "1878@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "",
                            "componentType": "txRootError",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "txRootError": ""
                            },
                            "metadata": 
                            {
                                "key": "value-1.7"
                            }
                        }
                    ],
                    "anomalies": 
                    {
                        "id": "2394@aggregation-aggregation-p3-46/data-46.dt[0]",
                        "scope": "a",
                        "metric": "",
                        "componentType": "anomaliesLog",
                        "measurements": 
                        {
                            "anomaliesLog": ""
                        }
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "1886@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "",
                            "componentType": "app.stack.root",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "children": 
                            [
                                {
                                    "id": "1907@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶exit",
                                    "componentType": "txExit",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack"
                                    }
                                },
                                {
                                    "id": "1920@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶syncExit.a.c",
                                    "componentType": "txIntermediateExit",
                                    "flags": "[derived, sync]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                        "type": "sync"
                                    },
                                    "childEntryPoint": 
                                    {
                                        "id": "1934@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.c.00000000-0000-001f-0000-000000000020",
                                        "metric": "",
                                        "componentType": "txSecondary",
                                        "flags": "[derived, sync]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 80,
                                                    "std.min": 1,
                                                    "std.max": 20,
                                                    "std.avg": 4,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 2000,
                                                    "std.min": 20,
                                                    "std.max": 30,
                                                    "std.avg": 100,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.1"
                                        },
                                        "children": 
                                        [
                                            {
                                                "id": "1956@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                                                "metric": "metric1⟶metric2⟶exit",
                                                "componentType": "txExit",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "logs": 
                                        [
                                            {
                                                "id": "1969@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                                                "metric": "",
                                                "componentType": "txSecondaryLog",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryLog": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.6",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "1977@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                                                "metric": "",
                                                "componentType": "txSecondaryError",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryError": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.7",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "scopeChildren": 
                                        ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location: (101@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                    }
                                },
                                {
                                    "id": "1985@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶asyncExit.a.c",
                                    "componentType": "txIntermediateExit",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                        "type": "async"
                                    },
                                    "childEntryPoint": 
                                    {
                                        "id": "1999@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                        "metric": "",
                                        "componentType": "txSecondary",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 80,
                                                    "std.min": 1,
                                                    "std.max": 20,
                                                    "std.avg": 4,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 2000,
                                                    "std.min": 20,
                                                    "std.max": 30,
                                                    "std.avg": 100,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.1"
                                        },
                                        "children": 
                                        [
                                            {
                                                "id": "2021@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                                "metric": "metric1⟶metric2⟶exit",
                                                "componentType": "txExit",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "2034@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                                "metric": "metric1⟶metric2⟶syncExit.a.d",
                                                "componentType": "txIntermediateExit",
                                                "flags": "[derived, sync]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary",
                                                    "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "type": "sync"
                                                },
                                                "childEntryPoint": 
                                                {
                                                    "id": "2048@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d.00000000-0000-0023-0000-000000000024",
                                                    "metric": "",
                                                    "componentType": "txSecondary",
                                                    "flags": "[derived, sync]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "inherent": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 80,
                                                                "std.min": 1,
                                                                "std.max": 20,
                                                                "std.avg": 4,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            },
                                                            "total": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 2000,
                                                                "std.min": 20,
                                                                "std.max": 30,
                                                                "std.avg": 100,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metricType2": "error"
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.1"
                                                    },
                                                    "children": 
                                                    [
                                                        {
                                                            "id": "2070@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.00000000-0000-0023-0000-000000000024",
                                                            "metric": "metric1⟶metric2⟶exit",
                                                            "componentType": "txExit",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "inherent": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 20,
                                                                        "std.min": 1,
                                                                        "std.max": 10,
                                                                        "std.avg": 1,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    },
                                                                    "total": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 20,
                                                                        "std.min": 1,
                                                                        "std.max": 10,
                                                                        "std.avg": 1,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "metricType2": "error"
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.4",
                                                                "parent": "txStack",
                                                                "entry": "txSecondary"
                                                            }
                                                        }
                                                    ],
                                                    "logs": 
                                                    [
                                                        {
                                                            "id": "2083@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.00000000-0000-0023-0000-000000000024",
                                                            "metric": "",
                                                            "componentType": "txSecondaryLog",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "txSecondaryLog": ""
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.6",
                                                                "entry": "txSecondary"
                                                            }
                                                        },
                                                        {
                                                            "id": "2091@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.00000000-0000-0023-0000-000000000024",
                                                            "metric": "",
                                                            "componentType": "txSecondaryError",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "txSecondaryError": ""
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.7",
                                                                "entry": "txSecondary"
                                                            }
                                                        }
                                                    ],
                                                    "scopeChildren": 
                                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location: (217@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            }
                                        ],
                                        "logs": 
                                        [
                                            {
                                                "id": "2099@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                                "metric": "",
                                                "componentType": "txSecondaryLog",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryLog": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.6",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "2107@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                                "metric": "",
                                                "componentType": "txSecondaryError",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryError": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.7",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "scopeChildren": 
                                        ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location: (152@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                    }
                                }
                            ],
                            "logs": 
                            [
                                {
                                    "id": "2115@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "",
                                    "componentType": "txRootLog",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "txRootLog": ""
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.6"
                                    }
                                },
                                {
                                    "id": "2123@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "",
                                    "componentType": "txRootError",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "txRootError": ""
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.7"
                                    }
                                }
                            ],
                            "anomalies": 
                            {
                                "id": "2402@aggregation-aggregation-p3-46/data-46.dt[0]",
                                "scope": "a.b",
                                "metric": "",
                                "componentType": "anomaliesLog",
                                "measurements": 
                                {
                                    "anomaliesLog": ""
                                }
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "23@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.root",
                                    "metric": "",
                                    "componentType": "app.stack.root",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 80,
                                                "std.min": 1,
                                                "std.max": 20,
                                                "std.avg": 4,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 2000,
                                                "std.min": 20,
                                                "std.max": 30,
                                                "std.avg": 100,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.1"
                                    },
                                    "dependents": 
                                    ["aggregation.aggregation.p3.txStackName@2161[inherent,total]"],
                                    "children": 
                                    [
                                        {
                                            "id": "44@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.root",
                                            "metric": "metric1⟶metric2⟶exit",
                                            "componentType": "txExit",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@2206[inherent,total]"]
                                        },
                                        {
                                            "id": "57@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.root",
                                            "metric": "metric1⟶metric2⟶syncExit",
                                            "componentType": "txIntermediateExit",
                                            "flags": "[leaf, sync]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                "type": "sync"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@2251[inherent,total]"],
                                            "childEntryPoint": 
                                            {
                                                "id": "101@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                "metric": "",
                                                "componentType": "txSecondary",
                                                "flags": "[sync]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 80,
                                                            "std.min": 1,
                                                            "std.max": 20,
                                                            "std.avg": 4,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 2000,
                                                            "std.min": 20,
                                                            "std.max": 30,
                                                            "std.avg": 100,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.1"
                                                },
                                                "dependents": 
                                                ["aggregation.aggregation.p3.txStackName@2266[inherent,total]"],
                                                "children": 
                                                [
                                                    {
                                                        "id": "123@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "metric1⟶metric2⟶exit",
                                                        "componentType": "txExit",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@2281[inherent,total]"]
                                                    }
                                                ],
                                                "logs": 
                                                [
                                                    {
                                                        "id": "136@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "",
                                                        "componentType": "txSecondaryLog",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryLog": 
                                                            {
                                                                "transactionId": 4,
                                                                "value": "testLog6"
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.6",
                                                            "entry": "txSecondary"
                                                        }
                                                    },
                                                    {
                                                        "id": "144@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "",
                                                        "componentType": "txSecondaryError",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryError": 
                                                            {
                                                                "transactionId": 3,
                                                                "stackTrace": 
                                                                [
                                                                    {
                                                                        "class": "testClass23",
                                                                        "method": "testMethod23"
                                                                    },
                                                                    {
                                                                        "class": "testClass23",
                                                                        "method": "testMethod23"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.7",
                                                            "entry": "txSecondary"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "id": "71@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.root",
                                            "metric": "metric1⟶metric2⟶asyncExit",
                                            "componentType": "txIntermediateExit",
                                            "flags": "[leaf]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                "type": "async"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@2326[inherent,total]"],
                                            "childEntryPoint": 
                                            {
                                                "id": "152@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                "metric": "",
                                                "componentType": "txSecondary",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 80,
                                                            "std.min": 1,
                                                            "std.max": 20,
                                                            "std.avg": 4,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 2000,
                                                            "std.min": 20,
                                                            "std.max": 30,
                                                            "std.avg": 100,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.1"
                                                },
                                                "dependents": 
                                                ["aggregation.aggregation.p3.txStackName@2266[inherent,total]"],
                                                "children": 
                                                [
                                                    {
                                                        "id": "174@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "metric1⟶metric2⟶exit",
                                                        "componentType": "txExit",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@2281[inherent,total]"]
                                                    },
                                                    {
                                                        "id": "187@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "metric1⟶metric2⟶syncExit",
                                                        "componentType": "txIntermediateExit",
                                                        "flags": "[leaf, sync]",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary",
                                                            "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "type": "sync"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@2341[inherent,total]"],
                                                        "childEntryPoint": 
                                                        {
                                                            "id": "217@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "metric": "",
                                                            "componentType": "txSecondary",
                                                            "flags": "[sync]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "inherent": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 80,
                                                                        "std.min": 1,
                                                                        "std.max": 20,
                                                                        "std.avg": 4,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    },
                                                                    "total": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 2000,
                                                                        "std.min": 20,
                                                                        "std.max": 30,
                                                                        "std.avg": 100,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "metricType2": "error"
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.1"
                                                            },
                                                            "dependents": 
                                                            ["aggregation.aggregation.p3.txStackName@2356[inherent,total]"],
                                                            "children": 
                                                            [
                                                                {
                                                                    "id": "239@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "metric1⟶metric2⟶exit",
                                                                    "componentType": "txExit",
                                                                    "measurements": 
                                                                    {
                                                                        "metricType1": 
                                                                        {
                                                                            "inherent": 
                                                                            {
                                                                                "std.count": 20,
                                                                                "std.sum": 20,
                                                                                "std.min": 1,
                                                                                "std.max": 10,
                                                                                "std.avg": 1,
                                                                                "anomaly(std.avg).score": 0.5,
                                                                                "anomaly(std.avg).level": "error",
                                                                                "anomaly(std.avg).primary": true,
                                                                                "forecast(std.count).score": 0.5,
                                                                                "forecast(std.count).level": "error",
                                                                                "forecast(std.count).primary": true,
                                                                                "forecast(std.count).predictions": 
                                                                                [
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "total": 
                                                                            {
                                                                                "std.count": 20,
                                                                                "std.sum": 20,
                                                                                "std.min": 1,
                                                                                "std.max": 10,
                                                                                "std.avg": 1,
                                                                                "anomaly(std.avg).score": 0.5,
                                                                                "anomaly(std.avg).level": "error",
                                                                                "anomaly(std.avg).primary": true,
                                                                                "forecast(std.count).score": 0.5,
                                                                                "forecast(std.count).level": "error",
                                                                                "forecast(std.count).primary": true,
                                                                                "forecast(std.count).predictions": 
                                                                                [
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "metricType2": "error"
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.4",
                                                                        "parent": "txStack",
                                                                        "entry": "txSecondary"
                                                                    },
                                                                    "dependents": 
                                                                    ["aggregation.aggregation.p3.txStackName@2371[inherent,total]"]
                                                                }
                                                            ],
                                                            "logs": 
                                                            [
                                                                {
                                                                    "id": "252@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "",
                                                                    "componentType": "txSecondaryLog",
                                                                    "measurements": 
                                                                    {
                                                                        "txSecondaryLog": 
                                                                        {
                                                                            "transactionId": 3,
                                                                            "value": "testLog9"
                                                                        }
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.6",
                                                                        "entry": "txSecondary"
                                                                    }
                                                                },
                                                                {
                                                                    "id": "260@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "",
                                                                    "componentType": "txSecondaryError",
                                                                    "measurements": 
                                                                    {
                                                                        "txSecondaryError": 
                                                                        {
                                                                            "transactionId": 2,
                                                                            "stackTrace": 
                                                                            [
                                                                                {
                                                                                    "class": "testClass31",
                                                                                    "method": "testMethod33"
                                                                                },
                                                                                {
                                                                                    "class": "testClass32",
                                                                                    "method": "testMethod32"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.7",
                                                                        "entry": "txSecondary"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "logs": 
                                                [
                                                    {
                                                        "id": "201@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "",
                                                        "componentType": "txSecondaryLog",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryLog": 
                                                            {
                                                                "transactionId": 3,
                                                                "value": "testLog9"
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.6",
                                                            "entry": "txSecondary"
                                                        }
                                                    },
                                                    {
                                                        "id": "209@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "",
                                                        "componentType": "txSecondaryError",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryError": 
                                                            {
                                                                "transactionId": 2,
                                                                "stackTrace": 
                                                                [
                                                                    {
                                                                        "class": "testClass31",
                                                                        "method": "testMethod31"
                                                                    },
                                                                    {
                                                                        "class": "testClass32",
                                                                        "method": "testMethod32"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.7",
                                                            "entry": "txSecondary"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "logs": 
                                    [
                                        {
                                            "id": "85@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.root",
                                            "metric": "",
                                            "componentType": "txRootLog",
                                            "measurements": 
                                            {
                                                "txRootLog": 
                                                {
                                                    "transactionId": 3,
                                                    "value": "testLog3"
                                                }
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.6"
                                            }
                                        },
                                        {
                                            "id": "93@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.root",
                                            "metric": "",
                                            "componentType": "txRootError",
                                            "measurements": 
                                            {
                                                "txRootError": 
                                                {
                                                    "transactionId": 2,
                                                    "stackTrace": 
                                                    [
                                                        {
                                                            "class": "class1",
                                                            "method": "testMethod1"
                                                        },
                                                        {
                                                            "class": "testClass2",
                                                            "method": "testMethod3"
                                                        }
                                                    ]
                                                }
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.7"
                                            }
                                        }
                                    ],
                                    "anomalies": 
                                    {
                                        "id": "2386@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.b.root",
                                        "metric": "",
                                        "componentType": "anomaliesLog",
                                        "measurements": 
                                        {
                                            "anomaliesLog": 
                                            {
                                                "scopeId": 19,
                                                "metricId": 7,
                                                "componentType": "txExit",
                                                "causes": 
                                                ["metricType1.anomaly(std.avg)"]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "2131@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 80,
                                "std.sum": 320,
                                "std.min": 1,
                                "std.max": 20,
                                "std.avg": 4,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 40,
                                "std.sum": 4000,
                                "std.min": 20,
                                "std.max": 30,
                                "std.avg": 100,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.1"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "2146@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "2161@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.root",
                                    "metric": "",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 80,
                                                "std.min": 1,
                                                "std.max": 20,
                                                "std.avg": 4,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 2000,
                                                "std.min": 20,
                                                "std.max": 30,
                                                "std.avg": 100,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.1"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.app.stack.root@23[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "2266@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 160,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 4000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txSecondary@101[inherent,total]", "aggregation.aggregation.p3.txSecondary@152[inherent,total]"]
                        },
                        {
                            "id": "2356@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.d",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txSecondary@217[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "2176@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "exit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 80,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 80,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txSecondary"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "2191@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "2206@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.root",
                                    "metric": "exit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txExit@44[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "2281@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 40,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 40,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txExit@123[inherent,total]", "aggregation.aggregation.p3.txExit@174[inherent,total]"]
                        },
                        {
                            "id": "2371@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.d",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txExit@239[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "2221@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "syncExit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 40,
                                "std.sum": 40,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 40,
                                "std.sum": 40,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txSecondary",
                        "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                        "type": "sync"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "2236@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "syncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                "type": "sync"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "2251@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.root",
                                    "metric": "syncExit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                        "type": "sync"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txIntermediateExit@57[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "2341@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "syncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary",
                                "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                "type": "sync"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txIntermediateExit@187[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "2296@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "asyncExit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 20,
                                "std.sum": 20,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 20,
                                "std.sum": 20,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                        "type": "async"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "2311@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "asyncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                "type": "async"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "2326@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.root",
                                    "metric": "asyncExit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                        "type": "async"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txIntermediateExit@71[inherent,total]"]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "<orphaned>": 
        []
    },
    "period 1": 
    {
        "<root>": 
        {
            "id": "2877@aggregation-aggregation-p3-46/data-46.dt[1]",
            "scope": "",
            "metric": "",
            "nodes": 
            [
                {
                    "id": "3424@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "txRootError",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 4,
                            "std.sum": 4,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "3439@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txRootError.TestException1&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "3454@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txRootError.TestException1&.class1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3469@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a",
                                            "metric": "txRootError.TestException1&.class1.method1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.b, location:txRootError.TestException1&.class1.method1 (3529@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b, location:txRootError.TestException1&.class1 (3514@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.b, location:txRootError.TestException1& (3499@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "3484@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "txRootError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "3499@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "txRootError.TestException1&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3514@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b",
                                            "metric": "txRootError.TestException1&.class1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3529@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.b",
                                                    "metric": "txRootError.TestException1&.class1.method1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.b.root, location:txRootError.TestException1&.class1.method1 (3274@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.b.root, location:txRootError.TestException1&.class1 (3584@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b.root, location:txRootError.TestException1& (3559@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "3544@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.root",
                                    "metric": "txRootError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3559@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.root",
                                            "metric": "txRootError.TestException1&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3584@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.b.root",
                                                    "metric": "txRootError.TestException1&.class1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "3274@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.b.root",
                                                            "metric": "txRootError.TestException1&.class1.method1",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 4,
                                                                    "std.sum": 4,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "app.stack.root"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "3599@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "txRootError&",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 4,
                            "std.sum": 4,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "3614@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txRootError&.class1",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "3629@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txRootError&.class1.testMethod1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b, location:txRootError&.class1.testMethod1 (3674@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.b, location:txRootError&.class1 (3659@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "3644@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "txRootError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "3659@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "txRootError&.class1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3674@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b",
                                            "metric": "txRootError&.class1.testMethod1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.b.root, location:txRootError&.class1.testMethod1 (3289@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b.root, location:txRootError&.class1 (3704@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "3689@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.root",
                                    "metric": "txRootError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3704@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.root",
                                            "metric": "txRootError&.class1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3289@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.b.root",
                                                    "metric": "txRootError&.class1.testMethod1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "app.stack.root"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "3719@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "txSecondaryError",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 6,
                            "std.sum": 6,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "3734@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError.TestException2&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "3749@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError.TestException2&.class21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3764@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a",
                                            "metric": "txSecondaryError.TestException2&.class21.method21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c, location:txSecondaryError.TestException2&.class21.method21 (3824@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError.TestException2&.class21 (3809@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError.TestException2& (3794@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        },
                        {
                            "id": "4079@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError.TestException3&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4096@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError.TestException3&.class31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4111@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a",
                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c, location:txSecondaryError.TestException3&.class31.method31 (4156@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError.TestException3&.class31.method31 (4351@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError.TestException3&.class31 (4141@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError.TestException3&.class31 (4336@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError.TestException3& (4126@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError.TestException3& (4321@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "3779@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "txSecondaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "3794@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError.TestException2&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3809@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError.TestException2&.class21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3824@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c",
                                                    "metric": "txSecondaryError.TestException2&.class21.method21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2&.class21.method21 (3304@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2&.class21 (3869@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2& (3854@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "4126@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError.TestException3&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4141@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError.TestException3&.class31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4156@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c",
                                                    "metric": "txSecondaryError.TestException3&.class31.method31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3&.class31.method31 (3349@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3&.class31 (4201@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3& (4186@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "3839@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3854@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError.TestException2&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3869@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError.TestException2&.class21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "3304@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                            "metric": "txSecondaryError.TestException2&.class21.method21",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "id": "4171@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4186@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                            "metric": "txSecondaryError.TestException3&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4201@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                    "metric": "txSecondaryError.TestException3&.class31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "3349@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "4306@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.d",
                            "metric": "txSecondaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4321@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.d",
                                    "metric": "txSecondaryError.TestException3&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4336@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError.TestException3&.class31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4351@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d",
                                                    "metric": "txSecondaryError.TestException3&.class31.method31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3&.class31.method31 (3379@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3&.class31 (4396@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3& (4381@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "4366@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4381@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "metric": "txSecondaryError.TestException3&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4396@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError.TestException3&.class31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "3379@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "3884@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "txSecondaryError&",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 10,
                            "std.sum": 10,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "3899@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass21",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "3914@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass21.testMethod21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass21.testMethod21 (3959@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass21 (3944@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        },
                        {
                            "id": "4004@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass23",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4019@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass23.testMethod23",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass23.testMethod23 (4049@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass23 (4034@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        },
                        {
                            "id": "4216@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass31",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 6,
                                    "std.sum": 6,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4231@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass31.testMethod31 (4261@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError&.testClass31.testMethod31 (4441@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "4486@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass31.testMethod33",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.d, location:txSecondaryError&.testClass31.testMethod33 (4501@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass31 (4246@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError&.testClass31 (4426@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "3929@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "txSecondaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 6,
                                    "std.sum": 6,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "3944@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3959@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass21.testMethod21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass21.testMethod21 (3319@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass21 (3989@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "4034@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass23",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4049@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass23.testMethod23",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass23.testMethod23 (3334@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass23 (4064@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "4246@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4261@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass31.testMethod31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError&.testClass31.testMethod31 (3364@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError&.testClass31 (4291@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "3974@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3989@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError&.testClass21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3319@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError&.testClass21.testMethod21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "id": "4064@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError&.testClass23",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3334@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError&.testClass23.testMethod23",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "id": "4276@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4291@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                            "metric": "txSecondaryError&.testClass31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3364@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "4411@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.d",
                            "metric": "txSecondaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4426@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.d",
                                    "metric": "txSecondaryError&.testClass31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4441@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError&.testClass31.testMethod31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31.testMethod31 (3394@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        },
                                        {
                                            "id": "4501@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError&.testClass31.testMethod33",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31.testMethod33 (3409@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31 (4471@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "4456@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4471@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "metric": "txSecondaryError&.testClass31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3394@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                },
                                                {
                                                    "id": "3409@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError&.testClass31.testMethod33",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "4516@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "",
                    "componentType": "app.stack.root",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 20,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 20,
                                "std.avg": 4,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 20,
                                "std.sum": 2000,
                                "std.min": 20,
                                "std.max": 30,
                                "std.avg": 100,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.1"
                    },
                    "children": 
                    [
                        {
                            "id": "4537@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶exit",
                            "componentType": "txExit",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack"
                            }
                        },
                        {
                            "id": "4550@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶syncExit.a",
                            "componentType": "txIntermediateExit",
                            "flags": "[derived, sync, scopeInner]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                "type": "sync"
                            },
                            "childEntryPoint": 
                            {
                                "id": "4564@aggregation-aggregation-p3-46/data-46.dt[1]",
                                "scope": "a.00000000-0000-003d-0000-00000000003e",
                                "metric": "",
                                "componentType": "txSecondary",
                                "flags": "[derived, sync, scopeInner]",
                                "measurements": 
                                {
                                    "metricType1": 
                                    {
                                        "inherent": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 80,
                                            "std.min": 1,
                                            "std.max": 20,
                                            "std.avg": 4,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        },
                                        "total": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 2000,
                                            "std.min": 20,
                                            "std.max": 30,
                                            "std.avg": 100,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        }
                                    },
                                    "metricType2": "error"
                                },
                                "metadata": 
                                {
                                    "key": "value-1.1"
                                },
                                "children": 
                                [
                                    {
                                        "id": "4586@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003d-0000-00000000003e",
                                        "metric": "metric1⟶metric2⟶exit",
                                        "componentType": "txExit",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "logs": 
                                [
                                    {
                                        "id": "4599@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003d-0000-00000000003e",
                                        "metric": "",
                                        "componentType": "txSecondaryLog",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryLog": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.6",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "4608@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003d-0000-00000000003e",
                                        "metric": "",
                                        "componentType": "txSecondaryError",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryError": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.7",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "scopeChildren": 
                                ["scope:a.c.00000000-0000-0043-0000-000000000044, location: (4810@aggregation-aggregation-p3-46/data-46.dt[1])"]
                            }
                        },
                        {
                            "id": "4616@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶asyncExit.a",
                            "componentType": "txIntermediateExit",
                            "flags": "[derived, scopeInner]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                "type": "async"
                            },
                            "childEntryPoint": 
                            {
                                "id": "4630@aggregation-aggregation-p3-46/data-46.dt[1]",
                                "scope": "a.00000000-0000-003f-0000-000000000040",
                                "metric": "",
                                "componentType": "txSecondary",
                                "flags": "[derived, scopeInner]",
                                "measurements": 
                                {
                                    "metricType1": 
                                    {
                                        "inherent": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 80,
                                            "std.min": 1,
                                            "std.max": 20,
                                            "std.avg": 4,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        },
                                        "total": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 2000,
                                            "std.min": 20,
                                            "std.max": 30,
                                            "std.avg": 100,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        }
                                    },
                                    "metricType2": "error"
                                },
                                "metadata": 
                                {
                                    "key": "value-1.1"
                                },
                                "children": 
                                [
                                    {
                                        "id": "4652@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003f-0000-000000000040",
                                        "metric": "metric1⟶metric2⟶exit",
                                        "componentType": "txExit",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "4665@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003f-0000-000000000040",
                                        "metric": "metric1⟶metric2⟶syncExit.a",
                                        "componentType": "txIntermediateExit",
                                        "flags": "[derived, sync, scopeInner]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary",
                                            "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "type": "sync"
                                        },
                                        "childEntryPoint": 
                                        {
                                            "id": "4679@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.00000000-0000-0041-0000-000000000042",
                                            "metric": "",
                                            "componentType": "txSecondary",
                                            "flags": "[derived, sync, scopeInner]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 80,
                                                        "std.min": 1,
                                                        "std.max": 20,
                                                        "std.avg": 4,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 2000,
                                                        "std.min": 20,
                                                        "std.max": 30,
                                                        "std.avg": 100,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.1"
                                            },
                                            "children": 
                                            [
                                                {
                                                    "id": "4701@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.00000000-0000-0041-0000-000000000042",
                                                    "metric": "metric1⟶metric2⟶exit",
                                                    "componentType": "txExit",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "inherent": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 20,
                                                                "std.min": 1,
                                                                "std.max": 10,
                                                                "std.avg": 1,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            },
                                                            "total": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 20,
                                                                "std.min": 1,
                                                                "std.max": 10,
                                                                "std.avg": 1,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metricType2": "error"
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.4",
                                                        "parent": "txStack",
                                                        "entry": "txSecondary"
                                                    }
                                                }
                                            ],
                                            "logs": 
                                            [
                                                {
                                                    "id": "4714@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.00000000-0000-0041-0000-000000000042",
                                                    "metric": "",
                                                    "componentType": "txSecondaryLog",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "txSecondaryLog": ""
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.6",
                                                        "entry": "txSecondary"
                                                    }
                                                },
                                                {
                                                    "id": "4722@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.00000000-0000-0041-0000-000000000042",
                                                    "metric": "",
                                                    "componentType": "txSecondaryError",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "txSecondaryError": ""
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.7",
                                                        "entry": "txSecondary"
                                                    }
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.d.00000000-0000-0047-0000-000000000048, location: (4924@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    }
                                ],
                                "logs": 
                                [
                                    {
                                        "id": "4730@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003f-0000-000000000040",
                                        "metric": "",
                                        "componentType": "txSecondaryLog",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryLog": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.6",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "4738@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003f-0000-000000000040",
                                        "metric": "",
                                        "componentType": "txSecondaryError",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryError": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.7",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "scopeChildren": 
                                ["scope:a.c.00000000-0000-0045-0000-000000000046, location: (4875@aggregation-aggregation-p3-46/data-46.dt[1])"]
                            }
                        }
                    ],
                    "logs": 
                    [
                        {
                            "id": "4746@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "",
                            "componentType": "txRootLog",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "txRootLog": ""
                            },
                            "metadata": 
                            {
                                "key": "value-1.6"
                            }
                        },
                        {
                            "id": "4754@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "",
                            "componentType": "txRootError",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "txRootError": ""
                            },
                            "metadata": 
                            {
                                "key": "value-1.7"
                            }
                        }
                    ],
                    "anomalies": 
                    {
                        "id": "5278@aggregation-aggregation-p3-46/data-46.dt[1]",
                        "scope": "a",
                        "metric": "",
                        "componentType": "anomaliesLog",
                        "measurements": 
                        {
                            "anomaliesLog": ""
                        }
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "4762@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "",
                            "componentType": "app.stack.root",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "children": 
                            [
                                {
                                    "id": "4783@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶exit",
                                    "componentType": "txExit",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack"
                                    }
                                },
                                {
                                    "id": "4796@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶syncExit.a.c",
                                    "componentType": "txIntermediateExit",
                                    "flags": "[derived, sync]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                        "type": "sync"
                                    },
                                    "childEntryPoint": 
                                    {
                                        "id": "4810@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.c.00000000-0000-0043-0000-000000000044",
                                        "metric": "",
                                        "componentType": "txSecondary",
                                        "flags": "[derived, sync]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 80,
                                                    "std.min": 1,
                                                    "std.max": 20,
                                                    "std.avg": 4,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 2000,
                                                    "std.min": 20,
                                                    "std.max": 30,
                                                    "std.avg": 100,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.1"
                                        },
                                        "children": 
                                        [
                                            {
                                                "id": "4832@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                                                "metric": "metric1⟶metric2⟶exit",
                                                "componentType": "txExit",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "logs": 
                                        [
                                            {
                                                "id": "4845@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                                                "metric": "",
                                                "componentType": "txSecondaryLog",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryLog": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.6",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "4853@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                                                "metric": "",
                                                "componentType": "txSecondaryError",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryError": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.7",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "scopeChildren": 
                                        ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location: (2972@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                    }
                                },
                                {
                                    "id": "4861@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶asyncExit.a.c",
                                    "componentType": "txIntermediateExit",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                        "type": "async"
                                    },
                                    "childEntryPoint": 
                                    {
                                        "id": "4875@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                        "metric": "",
                                        "componentType": "txSecondary",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 80,
                                                    "std.min": 1,
                                                    "std.max": 20,
                                                    "std.avg": 4,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 2000,
                                                    "std.min": 20,
                                                    "std.max": 30,
                                                    "std.avg": 100,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.1"
                                        },
                                        "children": 
                                        [
                                            {
                                                "id": "4897@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                                "metric": "metric1⟶metric2⟶exit",
                                                "componentType": "txExit",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "4910@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                                "metric": "metric1⟶metric2⟶syncExit.a.d",
                                                "componentType": "txIntermediateExit",
                                                "flags": "[derived, sync]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary",
                                                    "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "type": "sync"
                                                },
                                                "childEntryPoint": 
                                                {
                                                    "id": "4924@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d.00000000-0000-0047-0000-000000000048",
                                                    "metric": "",
                                                    "componentType": "txSecondary",
                                                    "flags": "[derived, sync]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "inherent": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 80,
                                                                "std.min": 1,
                                                                "std.max": 20,
                                                                "std.avg": 4,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            },
                                                            "total": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 2000,
                                                                "std.min": 20,
                                                                "std.max": 30,
                                                                "std.avg": 100,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metricType2": "error"
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.1"
                                                    },
                                                    "children": 
                                                    [
                                                        {
                                                            "id": "4946@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.00000000-0000-0047-0000-000000000048",
                                                            "metric": "metric1⟶metric2⟶exit",
                                                            "componentType": "txExit",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "inherent": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 20,
                                                                        "std.min": 1,
                                                                        "std.max": 10,
                                                                        "std.avg": 1,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    },
                                                                    "total": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 20,
                                                                        "std.min": 1,
                                                                        "std.max": 10,
                                                                        "std.avg": 1,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "metricType2": "error"
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.4",
                                                                "parent": "txStack",
                                                                "entry": "txSecondary"
                                                            }
                                                        }
                                                    ],
                                                    "logs": 
                                                    [
                                                        {
                                                            "id": "4959@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.00000000-0000-0047-0000-000000000048",
                                                            "metric": "",
                                                            "componentType": "txSecondaryLog",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "txSecondaryLog": ""
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.6",
                                                                "entry": "txSecondary"
                                                            }
                                                        },
                                                        {
                                                            "id": "4967@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.00000000-0000-0047-0000-000000000048",
                                                            "metric": "",
                                                            "componentType": "txSecondaryError",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "txSecondaryError": ""
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.7",
                                                                "entry": "txSecondary"
                                                            }
                                                        }
                                                    ],
                                                    "scopeChildren": 
                                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location: (3088@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            }
                                        ],
                                        "logs": 
                                        [
                                            {
                                                "id": "4975@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                                "metric": "",
                                                "componentType": "txSecondaryLog",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryLog": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.6",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "4983@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                                "metric": "",
                                                "componentType": "txSecondaryError",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryError": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.7",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "scopeChildren": 
                                        ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location: (3023@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                    }
                                }
                            ],
                            "logs": 
                            [
                                {
                                    "id": "4991@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "",
                                    "componentType": "txRootLog",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "txRootLog": ""
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.6"
                                    }
                                },
                                {
                                    "id": "4999@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "",
                                    "componentType": "txRootError",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "txRootError": ""
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.7"
                                    }
                                }
                            ],
                            "anomalies": 
                            {
                                "id": "5286@aggregation-aggregation-p3-46/data-46.dt[1]",
                                "scope": "a.b",
                                "metric": "",
                                "componentType": "anomaliesLog",
                                "measurements": 
                                {
                                    "anomaliesLog": ""
                                }
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "2894@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.root",
                                    "metric": "",
                                    "componentType": "app.stack.root",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 80,
                                                "std.min": 1,
                                                "std.max": 20,
                                                "std.avg": 4,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 2000,
                                                "std.min": 20,
                                                "std.max": 30,
                                                "std.avg": 100,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.1"
                                    },
                                    "dependents": 
                                    ["aggregation.aggregation.p3.txStackName@5037[inherent,total]"],
                                    "children": 
                                    [
                                        {
                                            "id": "2915@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.root",
                                            "metric": "metric1⟶metric2⟶exit",
                                            "componentType": "txExit",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@5082[inherent,total]"]
                                        },
                                        {
                                            "id": "2928@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.root",
                                            "metric": "metric1⟶metric2⟶syncExit",
                                            "componentType": "txIntermediateExit",
                                            "flags": "[leaf, sync]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                "type": "sync"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@5135[inherent,total]"],
                                            "childEntryPoint": 
                                            {
                                                "id": "2972@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                "metric": "",
                                                "componentType": "txSecondary",
                                                "flags": "[sync]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 80,
                                                            "std.min": 1,
                                                            "std.max": 20,
                                                            "std.avg": 4,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 2000,
                                                            "std.min": 20,
                                                            "std.max": 30,
                                                            "std.avg": 100,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.1"
                                                },
                                                "dependents": 
                                                ["aggregation.aggregation.p3.txStackName@5150[inherent,total]"],
                                                "children": 
                                                [
                                                    {
                                                        "id": "2994@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "metric1⟶metric2⟶exit",
                                                        "componentType": "txExit",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@5165[inherent,total]"]
                                                    }
                                                ],
                                                "logs": 
                                                [
                                                    {
                                                        "id": "3007@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "",
                                                        "componentType": "txSecondaryLog",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryLog": 
                                                            {
                                                                "transactionId": 4,
                                                                "value": "testLog6"
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.6",
                                                            "entry": "txSecondary"
                                                        }
                                                    },
                                                    {
                                                        "id": "3015@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "",
                                                        "componentType": "txSecondaryError",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryError": 
                                                            {
                                                                "transactionId": 3,
                                                                "stackTrace": 
                                                                [
                                                                    {
                                                                        "class": "testClass23",
                                                                        "method": "testMethod23"
                                                                    },
                                                                    {
                                                                        "class": "testClass23",
                                                                        "method": "testMethod23"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.7",
                                                            "entry": "txSecondary"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "id": "2942@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.root",
                                            "metric": "metric1⟶metric2⟶asyncExit",
                                            "componentType": "txIntermediateExit",
                                            "flags": "[leaf]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                "type": "async"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@5210[inherent,total]"],
                                            "childEntryPoint": 
                                            {
                                                "id": "3023@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                "metric": "",
                                                "componentType": "txSecondary",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 80,
                                                            "std.min": 1,
                                                            "std.max": 20,
                                                            "std.avg": 4,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 2000,
                                                            "std.min": 20,
                                                            "std.max": 30,
                                                            "std.avg": 100,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.1"
                                                },
                                                "dependents": 
                                                ["aggregation.aggregation.p3.txStackName@5150[inherent,total]"],
                                                "children": 
                                                [
                                                    {
                                                        "id": "3045@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "metric1⟶metric2⟶exit",
                                                        "componentType": "txExit",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@5165[inherent,total]"]
                                                    },
                                                    {
                                                        "id": "3058@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "metric1⟶metric2⟶syncExit",
                                                        "componentType": "txIntermediateExit",
                                                        "flags": "[leaf, sync]",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary",
                                                            "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "type": "sync"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@5225[inherent,total]"],
                                                        "childEntryPoint": 
                                                        {
                                                            "id": "3088@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "metric": "",
                                                            "componentType": "txSecondary",
                                                            "flags": "[sync]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "inherent": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 80,
                                                                        "std.min": 1,
                                                                        "std.max": 20,
                                                                        "std.avg": 4,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    },
                                                                    "total": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 2000,
                                                                        "std.min": 20,
                                                                        "std.max": 30,
                                                                        "std.avg": 100,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "metricType2": "error"
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.1"
                                                            },
                                                            "dependents": 
                                                            ["aggregation.aggregation.p3.txStackName@5240[inherent,total]"],
                                                            "children": 
                                                            [
                                                                {
                                                                    "id": "3110@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "metric1⟶metric2⟶exit",
                                                                    "componentType": "txExit",
                                                                    "measurements": 
                                                                    {
                                                                        "metricType1": 
                                                                        {
                                                                            "inherent": 
                                                                            {
                                                                                "std.count": 20,
                                                                                "std.sum": 20,
                                                                                "std.min": 1,
                                                                                "std.max": 10,
                                                                                "std.avg": 1,
                                                                                "anomaly(std.avg).score": 0.5,
                                                                                "anomaly(std.avg).level": "error",
                                                                                "anomaly(std.avg).primary": true,
                                                                                "forecast(std.count).score": 0.5,
                                                                                "forecast(std.count).level": "error",
                                                                                "forecast(std.count).primary": true,
                                                                                "forecast(std.count).predictions": 
                                                                                [
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "total": 
                                                                            {
                                                                                "std.count": 20,
                                                                                "std.sum": 20,
                                                                                "std.min": 1,
                                                                                "std.max": 10,
                                                                                "std.avg": 1,
                                                                                "anomaly(std.avg).score": 0.5,
                                                                                "anomaly(std.avg).level": "error",
                                                                                "anomaly(std.avg).primary": true,
                                                                                "forecast(std.count).score": 0.5,
                                                                                "forecast(std.count).level": "error",
                                                                                "forecast(std.count).primary": true,
                                                                                "forecast(std.count).predictions": 
                                                                                [
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "metricType2": "error"
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.4",
                                                                        "parent": "txStack",
                                                                        "entry": "txSecondary"
                                                                    },
                                                                    "dependents": 
                                                                    ["aggregation.aggregation.p3.txStackName@5255[inherent,total]"]
                                                                }
                                                            ],
                                                            "logs": 
                                                            [
                                                                {
                                                                    "id": "3123@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "",
                                                                    "componentType": "txSecondaryLog",
                                                                    "measurements": 
                                                                    {
                                                                        "txSecondaryLog": 
                                                                        {
                                                                            "transactionId": 3,
                                                                            "value": "testLog9"
                                                                        }
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.6",
                                                                        "entry": "txSecondary"
                                                                    }
                                                                },
                                                                {
                                                                    "id": "3131@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "",
                                                                    "componentType": "txSecondaryError",
                                                                    "measurements": 
                                                                    {
                                                                        "txSecondaryError": 
                                                                        {
                                                                            "transactionId": 2,
                                                                            "stackTrace": 
                                                                            [
                                                                                {
                                                                                    "class": "testClass31",
                                                                                    "method": "testMethod33"
                                                                                },
                                                                                {
                                                                                    "class": "testClass32",
                                                                                    "method": "testMethod32"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.7",
                                                                        "entry": "txSecondary"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "logs": 
                                                [
                                                    {
                                                        "id": "3072@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "",
                                                        "componentType": "txSecondaryLog",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryLog": 
                                                            {
                                                                "transactionId": 3,
                                                                "value": "testLog9"
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.6",
                                                            "entry": "txSecondary"
                                                        }
                                                    },
                                                    {
                                                        "id": "3080@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "",
                                                        "componentType": "txSecondaryError",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryError": 
                                                            {
                                                                "transactionId": 2,
                                                                "stackTrace": 
                                                                [
                                                                    {
                                                                        "class": "testClass31",
                                                                        "method": "testMethod31"
                                                                    },
                                                                    {
                                                                        "class": "testClass32",
                                                                        "method": "testMethod32"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.7",
                                                            "entry": "txSecondary"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "logs": 
                                    [
                                        {
                                            "id": "2956@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.root",
                                            "metric": "",
                                            "componentType": "txRootLog",
                                            "measurements": 
                                            {
                                                "txRootLog": 
                                                {
                                                    "transactionId": 3,
                                                    "value": "testLog3"
                                                }
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.6"
                                            }
                                        },
                                        {
                                            "id": "2964@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.root",
                                            "metric": "",
                                            "componentType": "txRootError",
                                            "measurements": 
                                            {
                                                "txRootError": 
                                                {
                                                    "transactionId": 2,
                                                    "stackTrace": 
                                                    [
                                                        {
                                                            "class": "class1",
                                                            "method": "testMethod1"
                                                        },
                                                        {
                                                            "class": "testClass2",
                                                            "method": "testMethod3"
                                                        }
                                                    ]
                                                }
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.7"
                                            }
                                        }
                                    ],
                                    "anomalies": 
                                    {
                                        "id": "5270@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.b.root",
                                        "metric": "",
                                        "componentType": "anomaliesLog",
                                        "measurements": 
                                        {
                                            "anomaliesLog": 
                                            {
                                                "scopeId": 19,
                                                "metricId": 7,
                                                "componentType": "txExit",
                                                "causes": 
                                                ["metricType1.anomaly(std.avg)"]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "5007@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 80,
                                "std.sum": 320,
                                "std.min": 1,
                                "std.max": 20,
                                "std.avg": 4,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 40,
                                "std.sum": 4000,
                                "std.min": 20,
                                "std.max": 30,
                                "std.avg": 100,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.1"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "5022@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "5037@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.root",
                                    "metric": "",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 80,
                                                "std.min": 1,
                                                "std.max": 20,
                                                "std.avg": 4,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 2000,
                                                "std.min": 20,
                                                "std.max": 30,
                                                "std.avg": 100,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.1"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.app.stack.root@2894[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "5150@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 160,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 4000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txSecondary@2972[inherent,total]", "aggregation.aggregation.p3.txSecondary@3023[inherent,total]"]
                        },
                        {
                            "id": "5240@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.d",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txSecondary@3088[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "5052@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "exit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 80,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 80,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txSecondary"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "5067@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "5082@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.root",
                                    "metric": "exit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txExit@2915[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "5165@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 40,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 40,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txExit@2994[inherent,total]", "aggregation.aggregation.p3.txExit@3045[inherent,total]"]
                        },
                        {
                            "id": "5255@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.d",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txExit@3110[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "5097@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "syncExit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 40,
                                "std.sum": 40,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 40,
                                "std.sum": 40,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txSecondary",
                        "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                        "type": "sync"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "5120@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "syncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                "type": "sync"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "5135@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.root",
                                    "metric": "syncExit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                        "type": "sync"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txIntermediateExit@2928[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "5225@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "syncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary",
                                "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                "type": "sync"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txIntermediateExit@3058[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "5180@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "asyncExit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 20,
                                "std.sum": 20,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 20,
                                "std.sum": 20,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                        "type": "async"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "5195@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "asyncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                "type": "async"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "5210@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.root",
                                    "metric": "asyncExit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                        "type": "async"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txIntermediateExit@2942[inherent,total]"]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "<orphaned>": 
        []
    }
}
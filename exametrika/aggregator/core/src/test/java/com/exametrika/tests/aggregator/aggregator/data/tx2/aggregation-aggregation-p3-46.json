{
    "cyclePeriod ": 
    {
        "<root>": 
        {
            "id": "3@aggregation-aggregation-p3-46/data-47.cy[cycle]",
            "scope": "",
            "metric": ""
        },
        "<orphaned>": 
        [
            {
                "id": "21@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b.primary",
                "metric": "",
                "componentType": "txFailureLog",
                "measurements": 
                [
                    {
                        "txFailureLog": 
                        {
                            "scopeId": 1,
                            "failure": 
                            {
                                "transactionId": 2,
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "testMethod1"
                                    },
                                    {
                                        "class": "testClass2",
                                        "method": "testMethod2"
                                    }
                                ]
                            },
                            "dependencies": 
                            [
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "testMethod1"
                                        },
                                        {
                                            "class": "testClass2",
                                            "method": "testMethod2"
                                        }
                                    ],
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "testMethod1"
                                        },
                                        {
                                            "class": "testClass2",
                                            "method": "testMethod3"
                                        }
                                    ],
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "testMethod1"
                                        },
                                        {
                                            "class": "testClass2",
                                            "method": "testMethod2"
                                        }
                                    ],
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "testMethod1"
                                        },
                                        {
                                            "class": "testClass2",
                                            "method": "testMethod3"
                                        }
                                    ],
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod31"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod31"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod33"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod33"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "txFailureLog": 
                        {
                            "scopeId": 1,
                            "failure": 
                            {
                                "transactionId": 1,
                                "exception": 
                                {
                                    "class": "TestException1",
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "method1"
                                        },
                                        {
                                            "class": "class2",
                                            "method": "method2"
                                        }
                                    ]
                                }
                            },
                            "dependencies": 
                            [
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException1",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class1",
                                                "method": "method1"
                                            },
                                            {
                                                "class": "class2",
                                                "method": "method2"
                                            }
                                        ]
                                    },
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException1",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class1",
                                                "method": "method1"
                                            },
                                            {
                                                "class": "class2",
                                                "method": "method3"
                                            }
                                        ]
                                    },
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException1",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class1",
                                                "method": "method1"
                                            },
                                            {
                                                "class": "class2",
                                                "method": "method2"
                                            }
                                        ]
                                    },
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException1",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class1",
                                                "method": "method1"
                                            },
                                            {
                                                "class": "class2",
                                                "method": "method3"
                                            }
                                        ]
                                    },
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException2",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class21",
                                                "method": "method21"
                                            },
                                            {
                                                "class": "class22",
                                                "method": "method22"
                                            }
                                        ]
                                    },
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass21",
                                            "method": "testMethod21"
                                        },
                                        {
                                            "class": "testClass22",
                                            "method": "testMethod22"
                                        }
                                    ],
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException2",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class21",
                                                "method": "method21"
                                            },
                                            {
                                                "class": "class22",
                                                "method": "method22"
                                            }
                                        ]
                                    },
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass21",
                                            "method": "testMethod21"
                                        },
                                        {
                                            "class": "testClass22",
                                            "method": "testMethod22"
                                        }
                                    ],
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException3",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class31",
                                                "method": "method31"
                                            },
                                            {
                                                "class": "class32",
                                                "method": "method32"
                                            }
                                        ]
                                    },
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException3",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class31",
                                                "method": "method31"
                                            },
                                            {
                                                "class": "class32",
                                                "method": "method32"
                                            }
                                        ]
                                    },
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException3",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class31",
                                                "method": "method31"
                                            },
                                            {
                                                "class": "class32",
                                                "method": "method32"
                                            }
                                        ]
                                    },
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod31"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException3",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class31",
                                                "method": "method31"
                                            },
                                            {
                                                "class": "class32",
                                                "method": "method32"
                                            }
                                        ]
                                    },
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod31"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "txFailureLog": 
                        {
                            "scopeId": 1,
                            "failure": 
                            {
                                "transactionId": 2,
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "testMethod1"
                                    },
                                    {
                                        "class": "testClass2",
                                        "method": "testMethod2"
                                    }
                                ]
                            },
                            "dependencies": 
                            [
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "testMethod1"
                                        },
                                        {
                                            "class": "testClass2",
                                            "method": "testMethod2"
                                        }
                                    ],
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "testMethod1"
                                        },
                                        {
                                            "class": "testClass2",
                                            "method": "testMethod3"
                                        }
                                    ],
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "testMethod1"
                                        },
                                        {
                                            "class": "testClass2",
                                            "method": "testMethod2"
                                        }
                                    ],
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "testMethod1"
                                        },
                                        {
                                            "class": "testClass2",
                                            "method": "testMethod3"
                                        }
                                    ],
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod31"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod31"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod33"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 2,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod33"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "txFailureLog": 
                        {
                            "scopeId": 1,
                            "failure": 
                            {
                                "transactionId": 1,
                                "exception": 
                                {
                                    "class": "TestException1",
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "class1",
                                            "method": "method1"
                                        },
                                        {
                                            "class": "class2",
                                            "method": "method2"
                                        }
                                    ]
                                }
                            },
                            "dependencies": 
                            [
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException1",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class1",
                                                "method": "method1"
                                            },
                                            {
                                                "class": "class2",
                                                "method": "method2"
                                            }
                                        ]
                                    },
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException1",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class1",
                                                "method": "method1"
                                            },
                                            {
                                                "class": "class2",
                                                "method": "method3"
                                            }
                                        ]
                                    },
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException1",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class1",
                                                "method": "method1"
                                            },
                                            {
                                                "class": "class2",
                                                "method": "method2"
                                            }
                                        ]
                                    },
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException1",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class1",
                                                "method": "method1"
                                            },
                                            {
                                                "class": "class2",
                                                "method": "method3"
                                            }
                                        ]
                                    },
                                    "scope": "a.b.primary",
                                    "componentType": "txPrimary",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException2",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class21",
                                                "method": "method21"
                                            },
                                            {
                                                "class": "class22",
                                                "method": "method22"
                                            }
                                        ]
                                    },
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass21",
                                            "method": "testMethod21"
                                        },
                                        {
                                            "class": "testClass22",
                                            "method": "testMethod22"
                                        }
                                    ],
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException2",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class21",
                                                "method": "method21"
                                            },
                                            {
                                                "class": "class22",
                                                "method": "method22"
                                            }
                                        ]
                                    },
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass21",
                                            "method": "testMethod21"
                                        },
                                        {
                                            "class": "testClass22",
                                            "method": "testMethod22"
                                        }
                                    ],
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException3",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class31",
                                                "method": "method31"
                                            },
                                            {
                                                "class": "class32",
                                                "method": "method32"
                                            }
                                        ]
                                    },
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException3",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class31",
                                                "method": "method31"
                                            },
                                            {
                                                "class": "class32",
                                                "method": "method32"
                                            }
                                        ]
                                    },
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException3",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class31",
                                                "method": "method31"
                                            },
                                            {
                                                "class": "class32",
                                                "method": "method32"
                                            }
                                        ]
                                    },
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod31"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "exception": 
                                    {
                                        "class": "TestException3",
                                        "stackTrace": 
                                        [
                                            {
                                                "class": "class31",
                                                "method": "method31"
                                            },
                                            {
                                                "class": "class32",
                                                "method": "method32"
                                            }
                                        ]
                                    },
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                },
                                {
                                    "transactionId": 1,
                                    "stackTrace": 
                                    [
                                        {
                                            "class": "testClass31",
                                            "method": "testMethod31"
                                        },
                                        {
                                            "class": "testClass32",
                                            "method": "testMethod32"
                                        }
                                    ],
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "componentType": "txSecondaryError",
                                    "entryRequest": 
                                    {
                                        "key": "value-1.1"
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "26@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b.primary",
                "metric": "",
                "componentType": "txPrimaryLog",
                "measurements": 
                [
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.6",
                    "entry": "txPrimary"
                }
            },
            {
                "id": "31@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b.primary",
                "metric": "",
                "componentType": "txPrimaryError",
                "measurements": 
                [
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.7",
                    "entry": "txPrimary"
                }
            },
            {
                "id": "36@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.6",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "41@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.7",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "46@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.6",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "51@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.7",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "56@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.6",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "61@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ],
                "metadata": 
                {
                    "key": "value-1.7",
                    "entry": "txSecondary"
                }
            },
            {
                "id": "66@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-0019-0000-00000000001a",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ]
            },
            {
                "id": "71@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-0019-0000-00000000001a",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "76@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-001d-0000-00000000001e",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "81@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-001d-0000-00000000001e",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "86@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-001b-0000-00000000001c",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "91@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-001b-0000-00000000001c",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "96@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a",
                "metric": "",
                "componentType": "txPrimaryLog",
                "measurements": 
                [
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    }
                ]
            },
            {
                "id": "101@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a",
                "metric": "",
                "componentType": "txPrimaryError",
                "measurements": 
                [
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "106@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ]
            },
            {
                "id": "111@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "116@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.00000000-0000-0023-0000-000000000024",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "121@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.00000000-0000-0023-0000-000000000024",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "126@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "131@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "136@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b",
                "metric": "",
                "componentType": "txPrimaryLog",
                "measurements": 
                [
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog1"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog2"
                        }
                    },
                    {
                        "txPrimaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog3"
                        }
                    }
                ]
            },
            {
                "id": "141@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b",
                "metric": "",
                "componentType": "txPrimaryError",
                "measurements": 
                [
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException1",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class1",
                                        "method": "method1"
                                    },
                                    {
                                        "class": "class2",
                                        "method": "method3"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod2"
                                }
                            ]
                        }
                    },
                    {
                        "txPrimaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "class1",
                                    "method": "testMethod1"
                                },
                                {
                                    "class": "testClass2",
                                    "method": "testMethod3"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "146@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b.primary",
                "metric": "",
                "componentType": "anomaliesLog",
                "measurements": 
                [
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 0,
                            "componentType": "txPrimary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 9,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 11,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 13,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 13,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 9,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 19,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 19,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 0,
                            "componentType": "txPrimary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 9,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 1,
                            "metricId": 11,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 13,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 13,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 16,
                            "metricId": 9,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 19,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 19,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    }
                ]
            },
            {
                "id": "151@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a",
                "metric": "",
                "componentType": "anomaliesLog",
                "measurements": 
                [
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 0,
                            "componentType": "txPrimary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 87,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 151,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 151,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 92,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 154,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 154,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 154,
                            "metricId": 87,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 157,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 157,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 0,
                            "componentType": "txPrimary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 87,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 205,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 205,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 48,
                            "metricId": 92,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 208,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 208,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 208,
                            "metricId": 87,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 211,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 211,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    }
                ]
            },
            {
                "id": "156@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.b",
                "metric": "",
                "componentType": "anomaliesLog",
                "measurements": 
                [
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 57,
                            "metricId": 0,
                            "componentType": "txPrimary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 57,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 57,
                            "metricId": 100,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 160,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 160,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 57,
                            "metricId": 105,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 163,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 163,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 163,
                            "metricId": 110,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 166,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 166,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 57,
                            "metricId": 0,
                            "componentType": "txPrimary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 57,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 57,
                            "metricId": 100,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 214,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 214,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 57,
                            "metricId": 105,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 217,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 217,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 217,
                            "metricId": 110,
                            "componentType": "txIntermediateExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 220,
                            "metricId": 0,
                            "componentType": "txSecondary",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    },
                    {
                        "anomaliesLog": 
                        {
                            "scopeId": 220,
                            "metricId": 7,
                            "componentType": "txExit",
                            "causes": 
                            ["metricType1.anomaly(std.avg)"]
                        }
                    }
                ]
            },
            {
                "id": "161@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-003d-0000-00000000003e",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ]
            },
            {
                "id": "166@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-003d-0000-00000000003e",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "171@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-0041-0000-000000000042",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "176@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-0041-0000-000000000042",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "181@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-003f-0000-000000000040",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "186@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.00000000-0000-003f-0000-000000000040",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "191@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog4"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog5"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 4,
                            "value": "testLog6"
                        }
                    }
                ]
            },
            {
                "id": "196@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException2",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class21",
                                        "method": "method21"
                                    },
                                    {
                                        "class": "class22",
                                        "method": "method22"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass21",
                                    "method": "testMethod21"
                                },
                                {
                                    "class": "testClass22",
                                    "method": "testMethod22"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 3,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                },
                                {
                                    "class": "testClass23",
                                    "method": "testMethod23"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "201@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.00000000-0000-0047-0000-000000000048",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "206@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.d.00000000-0000-0047-0000-000000000048",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod33"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            },
            {
                "id": "211@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                "metric": "",
                "componentType": "txSecondaryLog",
                "measurements": 
                [
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 1,
                            "value": "testLog7"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 2,
                            "value": "testLog8"
                        }
                    },
                    {
                        "txSecondaryLog": 
                        {
                            "transactionId": 3,
                            "value": "testLog9"
                        }
                    }
                ]
            },
            {
                "id": "216@aggregation-aggregation-p3-46/data-47.cy[cycle]",
                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                "metric": "",
                "componentType": "txSecondaryError",
                "measurements": 
                [
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 1,
                            "exception": 
                            {
                                "class": "TestException3",
                                "stackTrace": 
                                [
                                    {
                                        "class": "class31",
                                        "method": "method31"
                                    },
                                    {
                                        "class": "class32",
                                        "method": "method32"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "txSecondaryError": 
                        {
                            "transactionId": 2,
                            "stackTrace": 
                            [
                                {
                                    "class": "testClass31",
                                    "method": "testMethod31"
                                },
                                {
                                    "class": "testClass32",
                                    "method": "testMethod32"
                                }
                            ]
                        }
                    }
                ]
            }
        ]
    },
    "period 0": 
    {
        "<root>": 
        {
            "id": "6@aggregation-aggregation-p3-46/data-46.dt[0]",
            "scope": "",
            "metric": "",
            "nodes": 
            [
                {
                    "id": "572@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "txPrimaryError",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 4,
                            "std.sum": 4,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "587@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txPrimaryError.TestException1&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "602@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txPrimaryError.TestException1&.class1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "617@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a",
                                            "metric": "txPrimaryError.TestException1&.class1.method1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.b, location:txPrimaryError.TestException1&.class1.method1 (677@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b, location:txPrimaryError.TestException1&.class1 (662@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.b, location:txPrimaryError.TestException1& (647@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "632@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "txPrimaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "647@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "txPrimaryError.TestException1&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "662@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b",
                                            "metric": "txPrimaryError.TestException1&.class1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "677@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.b",
                                                    "metric": "txPrimaryError.TestException1&.class1.method1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.b.primary, location:txPrimaryError.TestException1&.class1.method1 (415@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.b.primary, location:txPrimaryError.TestException1&.class1 (722@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:txPrimaryError.TestException1& (707@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "692@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "txPrimaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "707@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "txPrimaryError.TestException1&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "722@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.b.primary",
                                                    "metric": "txPrimaryError.TestException1&.class1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "415@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.b.primary",
                                                            "metric": "txPrimaryError.TestException1&.class1.method1",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 4,
                                                                    "std.sum": 4,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txPrimary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "737@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "txPrimaryError&",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 4,
                            "std.sum": 4,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "752@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txPrimaryError&.class1",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "767@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txPrimaryError&.class1.testMethod1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b, location:txPrimaryError&.class1.testMethod1 (812@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.b, location:txPrimaryError&.class1 (797@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "782@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "txPrimaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "797@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "txPrimaryError&.class1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "812@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b",
                                            "metric": "txPrimaryError&.class1.testMethod1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.b.primary, location:txPrimaryError&.class1.testMethod1 (430@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:txPrimaryError&.class1 (842@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "827@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "txPrimaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "842@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "txPrimaryError&.class1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "430@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.b.primary",
                                                    "metric": "txPrimaryError&.class1.testMethod1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txPrimary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "857@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "txSecondaryError",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 6,
                            "std.sum": 6,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "872@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError.TestException2&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "887@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError.TestException2&.class21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "902@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a",
                                            "metric": "txSecondaryError.TestException2&.class21.method21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c, location:txSecondaryError.TestException2&.class21.method21 (962@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError.TestException2&.class21 (947@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError.TestException2& (932@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        },
                        {
                            "id": "1219@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError.TestException3&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1234@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError.TestException3&.class31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1249@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a",
                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c, location:txSecondaryError.TestException3&.class31.method31 (1294@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError.TestException3&.class31.method31 (1489@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError.TestException3&.class31 (1279@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError.TestException3&.class31 (1474@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError.TestException3& (1264@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError.TestException3& (1459@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "917@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "txSecondaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "932@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError.TestException2&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "947@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError.TestException2&.class21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "962@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c",
                                                    "metric": "txSecondaryError.TestException2&.class21.method21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2&.class21.method21 (445@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2&.class21 (1007@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2& (992@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "1264@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError.TestException3&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1279@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError.TestException3&.class31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "1294@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c",
                                                    "metric": "txSecondaryError.TestException3&.class31.method31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3&.class31.method31 (490@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3&.class31 (1339@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3& (1324@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "977@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "992@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError.TestException2&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "1007@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError.TestException2&.class21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "445@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                            "metric": "txSecondaryError.TestException2&.class21.method21",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "id": "1309@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1324@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                            "metric": "txSecondaryError.TestException3&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "1339@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                    "metric": "txSecondaryError.TestException3&.class31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "490@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "1444@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.d",
                            "metric": "txSecondaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1459@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.d",
                                    "metric": "txSecondaryError.TestException3&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1474@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError.TestException3&.class31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "1489@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d",
                                                    "metric": "txSecondaryError.TestException3&.class31.method31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3&.class31.method31 (527@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3&.class31 (1536@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3& (1519@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "1504@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1519@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "metric": "txSecondaryError.TestException3&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "1536@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError.TestException3&.class31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "527@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "1024@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "txSecondaryError&",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 10,
                            "std.sum": 10,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "1039@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass21",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1054@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass21.testMethod21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass21.testMethod21 (1099@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass21 (1084@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        },
                        {
                            "id": "1144@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass23",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1159@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass23.testMethod23",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass23.testMethod23 (1189@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass23 (1174@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        },
                        {
                            "id": "1354@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass31",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 6,
                                    "std.sum": 6,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1369@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass31.testMethod31 (1399@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError&.testClass31.testMethod31 (1581@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "1626@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass31.testMethod33",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.d, location:txSecondaryError&.testClass31.testMethod33 (1641@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass31 (1384@aggregation-aggregation-p3-46/data-46.dt[0])", "scope:a.d, location:txSecondaryError&.testClass31 (1566@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "1069@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "txSecondaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 6,
                                    "std.sum": 6,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1084@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1099@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass21.testMethod21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass21.testMethod21 (460@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass21 (1129@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "1174@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass23",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1189@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass23.testMethod23",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass23.testMethod23 (475@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass23 (1204@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "1384@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1399@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass31.testMethod31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError&.testClass31.testMethod31 (512@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError&.testClass31 (1429@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "1114@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1129@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError&.testClass21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "460@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError&.testClass21.testMethod21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "id": "1204@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError&.testClass23",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "475@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError&.testClass23.testMethod23",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "id": "1414@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1429@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                            "metric": "txSecondaryError&.testClass31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "512@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "1551@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.d",
                            "metric": "txSecondaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "1566@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.d",
                                    "metric": "txSecondaryError&.testClass31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1581@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError&.testClass31.testMethod31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31.testMethod31 (542@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        },
                                        {
                                            "id": "1641@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError&.testClass31.testMethod33",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31.testMethod33 (557@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31 (1611@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "1596@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "1611@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "metric": "txSecondaryError&.testClass31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "542@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                },
                                                {
                                                    "id": "557@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError&.testClass31.testMethod33",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "1656@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "",
                    "componentType": "txPrimary",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 20,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 20,
                                "std.avg": 4,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 20,
                                "std.sum": 2000,
                                "std.min": 20,
                                "std.max": 30,
                                "std.avg": 100,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.1"
                    },
                    "children": 
                    [
                        {
                            "id": "1678@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶exit",
                            "componentType": "txExit",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary"
                            }
                        },
                        {
                            "id": "1691@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶syncExit.a",
                            "componentType": "txIntermediateExit",
                            "flags": "[derived, sync, scopeInner]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary",
                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                "type": "sync"
                            },
                            "childEntryPoint": 
                            {
                                "id": "1705@aggregation-aggregation-p3-46/data-46.dt[0]",
                                "scope": "a.00000000-0000-0019-0000-00000000001a",
                                "metric": "",
                                "componentType": "txSecondary",
                                "flags": "[derived, sync, scopeInner]",
                                "measurements": 
                                {
                                    "metricType1": 
                                    {
                                        "inherent": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 80,
                                            "std.min": 1,
                                            "std.max": 20,
                                            "std.avg": 4,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        },
                                        "total": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 2000,
                                            "std.min": 20,
                                            "std.max": 30,
                                            "std.avg": 100,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        }
                                    },
                                    "metricType2": "error"
                                },
                                "metadata": 
                                {
                                    "key": "value-1.1"
                                },
                                "children": 
                                [
                                    {
                                        "id": "1727@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-0019-0000-00000000001a",
                                        "metric": "metric1⟶metric2⟶exit",
                                        "componentType": "txExit",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "logs": 
                                [
                                    {
                                        "id": "1740@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-0019-0000-00000000001a",
                                        "metric": "",
                                        "componentType": "txSecondaryLog",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryLog": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.6",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "1748@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-0019-0000-00000000001a",
                                        "metric": "",
                                        "componentType": "txSecondaryError",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryError": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.7",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "scopeChildren": 
                                ["scope:a.c.00000000-0000-001f-0000-000000000020, location: (1951@aggregation-aggregation-p3-46/data-46.dt[0])"]
                            }
                        },
                        {
                            "id": "1756@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶asyncExit.a",
                            "componentType": "txIntermediateExit",
                            "flags": "[derived, scopeInner]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary",
                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                "type": "async"
                            },
                            "childEntryPoint": 
                            {
                                "id": "1770@aggregation-aggregation-p3-46/data-46.dt[0]",
                                "scope": "a.00000000-0000-001b-0000-00000000001c",
                                "metric": "",
                                "componentType": "txSecondary",
                                "flags": "[derived, scopeInner]",
                                "measurements": 
                                {
                                    "metricType1": 
                                    {
                                        "inherent": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 80,
                                            "std.min": 1,
                                            "std.max": 20,
                                            "std.avg": 4,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        },
                                        "total": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 2000,
                                            "std.min": 20,
                                            "std.max": 30,
                                            "std.avg": 100,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        }
                                    },
                                    "metricType2": "error"
                                },
                                "metadata": 
                                {
                                    "key": "value-1.1"
                                },
                                "children": 
                                [
                                    {
                                        "id": "1792@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-001b-0000-00000000001c",
                                        "metric": "metric1⟶metric2⟶exit",
                                        "componentType": "txExit",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "1805@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-001b-0000-00000000001c",
                                        "metric": "metric1⟶metric2⟶syncExit.a",
                                        "componentType": "txIntermediateExit",
                                        "flags": "[derived, sync, scopeInner]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary",
                                            "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "type": "sync"
                                        },
                                        "childEntryPoint": 
                                        {
                                            "id": "1819@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.00000000-0000-001d-0000-00000000001e",
                                            "metric": "",
                                            "componentType": "txSecondary",
                                            "flags": "[derived, sync, scopeInner]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 80,
                                                        "std.min": 1,
                                                        "std.max": 20,
                                                        "std.avg": 4,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 2000,
                                                        "std.min": 20,
                                                        "std.max": 30,
                                                        "std.avg": 100,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.1"
                                            },
                                            "children": 
                                            [
                                                {
                                                    "id": "1841@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.00000000-0000-001d-0000-00000000001e",
                                                    "metric": "metric1⟶metric2⟶exit",
                                                    "componentType": "txExit",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "inherent": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 20,
                                                                "std.min": 1,
                                                                "std.max": 10,
                                                                "std.avg": 1,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            },
                                                            "total": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 20,
                                                                "std.min": 1,
                                                                "std.max": 10,
                                                                "std.avg": 1,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metricType2": "error"
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.4",
                                                        "parent": "txStack",
                                                        "entry": "txSecondary"
                                                    }
                                                }
                                            ],
                                            "logs": 
                                            [
                                                {
                                                    "id": "1854@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.00000000-0000-001d-0000-00000000001e",
                                                    "metric": "",
                                                    "componentType": "txSecondaryLog",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "txSecondaryLog": ""
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.6",
                                                        "entry": "txSecondary"
                                                    }
                                                },
                                                {
                                                    "id": "1862@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.00000000-0000-001d-0000-00000000001e",
                                                    "metric": "",
                                                    "componentType": "txSecondaryError",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "txSecondaryError": ""
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.7",
                                                        "entry": "txSecondary"
                                                    }
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.d.00000000-0000-0023-0000-000000000024, location: (2075@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                        }
                                    }
                                ],
                                "logs": 
                                [
                                    {
                                        "id": "1870@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-001b-0000-00000000001c",
                                        "metric": "",
                                        "componentType": "txSecondaryLog",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryLog": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.6",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "1878@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.00000000-0000-001b-0000-00000000001c",
                                        "metric": "",
                                        "componentType": "txSecondaryError",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryError": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.7",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "scopeChildren": 
                                ["scope:a.c.00000000-0000-0021-0000-000000000022, location: (2016@aggregation-aggregation-p3-46/data-46.dt[0])"]
                            }
                        }
                    ],
                    "logs": 
                    [
                        {
                            "id": "1886@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "",
                            "componentType": "txPrimaryLog",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "txPrimaryLog": ""
                            },
                            "metadata": 
                            {
                                "key": "value-1.6",
                                "entry": "txPrimary"
                            }
                        },
                        {
                            "id": "1894@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "",
                            "componentType": "txPrimaryError",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "txPrimaryError": ""
                            },
                            "metadata": 
                            {
                                "key": "value-1.7",
                                "entry": "txPrimary"
                            }
                        }
                    ],
                    "anomalies": 
                    {
                        "id": "2893@aggregation-aggregation-p3-46/data-46.dt[0]",
                        "scope": "a",
                        "metric": "",
                        "componentType": "anomaliesLog",
                        "measurements": 
                        {
                            "anomaliesLog": ""
                        }
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "1902@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "",
                            "componentType": "txPrimary",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "children": 
                            [
                                {
                                    "id": "1924@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶exit",
                                    "componentType": "txExit",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary"
                                    }
                                },
                                {
                                    "id": "1937@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶syncExit.a.c",
                                    "componentType": "txIntermediateExit",
                                    "flags": "[derived, sync]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary",
                                        "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                        "type": "sync"
                                    },
                                    "childEntryPoint": 
                                    {
                                        "id": "1951@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.c.00000000-0000-001f-0000-000000000020",
                                        "metric": "",
                                        "componentType": "txSecondary",
                                        "flags": "[derived, sync]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 80,
                                                    "std.min": 1,
                                                    "std.max": 20,
                                                    "std.avg": 4,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 2000,
                                                    "std.min": 20,
                                                    "std.max": 30,
                                                    "std.avg": 100,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.1"
                                        },
                                        "children": 
                                        [
                                            {
                                                "id": "1973@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                                                "metric": "metric1⟶metric2⟶exit",
                                                "componentType": "txExit",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "logs": 
                                        [
                                            {
                                                "id": "1986@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                                                "metric": "",
                                                "componentType": "txSecondaryLog",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryLog": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.6",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "1994@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-001f-0000-000000000020",
                                                "metric": "",
                                                "componentType": "txSecondaryError",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryError": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.7",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "scopeChildren": 
                                        ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location: (110@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                    }
                                },
                                {
                                    "id": "2002@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶asyncExit.a.c",
                                    "componentType": "txIntermediateExit",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary",
                                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                        "type": "async"
                                    },
                                    "childEntryPoint": 
                                    {
                                        "id": "2016@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                        "metric": "",
                                        "componentType": "txSecondary",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 80,
                                                    "std.min": 1,
                                                    "std.max": 20,
                                                    "std.avg": 4,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 2000,
                                                    "std.min": 20,
                                                    "std.max": 30,
                                                    "std.avg": 100,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.1"
                                        },
                                        "children": 
                                        [
                                            {
                                                "id": "2048@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                                "metric": "metric1⟶metric2⟶exit",
                                                "componentType": "txExit",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "2061@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                                "metric": "metric1⟶metric2⟶syncExit.a.d",
                                                "componentType": "txIntermediateExit",
                                                "flags": "[derived, sync]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary",
                                                    "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "type": "sync"
                                                },
                                                "childEntryPoint": 
                                                {
                                                    "id": "2075@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                    "scope": "a.d.00000000-0000-0023-0000-000000000024",
                                                    "metric": "",
                                                    "componentType": "txSecondary",
                                                    "flags": "[derived, sync]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "inherent": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 80,
                                                                "std.min": 1,
                                                                "std.max": 20,
                                                                "std.avg": 4,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            },
                                                            "total": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 2000,
                                                                "std.min": 20,
                                                                "std.max": 30,
                                                                "std.avg": 100,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metricType2": "error"
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.1"
                                                    },
                                                    "children": 
                                                    [
                                                        {
                                                            "id": "2097@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.00000000-0000-0023-0000-000000000024",
                                                            "metric": "metric1⟶metric2⟶exit",
                                                            "componentType": "txExit",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "inherent": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 20,
                                                                        "std.min": 1,
                                                                        "std.max": 10,
                                                                        "std.avg": 1,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    },
                                                                    "total": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 20,
                                                                        "std.min": 1,
                                                                        "std.max": 10,
                                                                        "std.avg": 1,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "metricType2": "error"
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.4",
                                                                "parent": "txStack",
                                                                "entry": "txSecondary"
                                                            }
                                                        }
                                                    ],
                                                    "logs": 
                                                    [
                                                        {
                                                            "id": "2110@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.00000000-0000-0023-0000-000000000024",
                                                            "metric": "",
                                                            "componentType": "txSecondaryLog",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "txSecondaryLog": ""
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.6",
                                                                "entry": "txSecondary"
                                                            }
                                                        },
                                                        {
                                                            "id": "2118@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.00000000-0000-0023-0000-000000000024",
                                                            "metric": "",
                                                            "componentType": "txSecondaryError",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "txSecondaryError": ""
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.7",
                                                                "entry": "txSecondary"
                                                            }
                                                        }
                                                    ],
                                                    "scopeChildren": 
                                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location: (226@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                                }
                                            }
                                        ],
                                        "logs": 
                                        [
                                            {
                                                "id": "2126@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                                "metric": "",
                                                "componentType": "txSecondaryLog",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryLog": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.6",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "2134@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.00000000-0000-0021-0000-000000000022",
                                                "metric": "",
                                                "componentType": "txSecondaryError",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryError": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.7",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "scopeChildren": 
                                        ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location: (161@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                    }
                                }
                            ],
                            "logs": 
                            [
                                {
                                    "id": "2142@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "",
                                    "componentType": "txPrimaryLog",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "txPrimaryLog": ""
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.6",
                                        "entry": "txPrimary"
                                    }
                                },
                                {
                                    "id": "2150@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "",
                                    "componentType": "txPrimaryError",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "txPrimaryError": ""
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.7",
                                        "entry": "txPrimary"
                                    }
                                }
                            ],
                            "anomalies": 
                            {
                                "id": "2901@aggregation-aggregation-p3-46/data-46.dt[0]",
                                "scope": "a.b",
                                "metric": "",
                                "componentType": "anomaliesLog",
                                "measurements": 
                                {
                                    "anomaliesLog": ""
                                }
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "23@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "",
                                    "componentType": "txPrimary",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 80,
                                                "std.min": 1,
                                                "std.max": 20,
                                                "std.avg": 4,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 2000,
                                                "std.min": 20,
                                                "std.max": 30,
                                                "std.avg": 100,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.1"
                                    },
                                    "dependents": 
                                    ["aggregation.aggregation.p3.txStackName@2188[inherent,total]"],
                                    "children": 
                                    [
                                        {
                                            "id": "53@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "metric1⟶metric2⟶exit",
                                            "componentType": "txExit",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "entry": "txPrimary"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@2233[inherent,total]"]
                                        },
                                        {
                                            "id": "66@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "metric1⟶metric2⟶syncExit",
                                            "componentType": "txIntermediateExit",
                                            "flags": "[leaf, sync]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "entry": "txPrimary",
                                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                "type": "sync"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@2278[inherent,total]"],
                                            "childEntryPoint": 
                                            {
                                                "id": "110@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                "metric": "",
                                                "componentType": "txSecondary",
                                                "flags": "[sync]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 80,
                                                            "std.min": 1,
                                                            "std.max": 20,
                                                            "std.avg": 4,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 2000,
                                                            "std.min": 20,
                                                            "std.max": 30,
                                                            "std.avg": 100,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.1"
                                                },
                                                "dependents": 
                                                ["aggregation.aggregation.p3.txStackName@2293[inherent,total]"],
                                                "children": 
                                                [
                                                    {
                                                        "id": "132@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "metric1⟶metric2⟶exit",
                                                        "componentType": "txExit",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@2308[inherent,total]"]
                                                    }
                                                ],
                                                "logs": 
                                                [
                                                    {
                                                        "id": "145@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "",
                                                        "componentType": "txSecondaryLog",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryLog": 
                                                            {
                                                                "transactionId": 4,
                                                                "value": "testLog6"
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.6",
                                                            "entry": "txSecondary"
                                                        }
                                                    },
                                                    {
                                                        "id": "153@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "",
                                                        "componentType": "txSecondaryError",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryError": 
                                                            {
                                                                "transactionId": 3,
                                                                "stackTrace": 
                                                                [
                                                                    {
                                                                        "class": "testClass23",
                                                                        "method": "testMethod23"
                                                                    },
                                                                    {
                                                                        "class": "testClass23",
                                                                        "method": "testMethod23"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.7",
                                                            "entry": "txSecondary"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "id": "80@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "metric1⟶metric2⟶asyncExit",
                                            "componentType": "txIntermediateExit",
                                            "flags": "[leaf]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "entry": "txPrimary",
                                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                "type": "async"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@2353[inherent,total]"],
                                            "childEntryPoint": 
                                            {
                                                "id": "161@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                "metric": "",
                                                "componentType": "txSecondary",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 80,
                                                            "std.min": 1,
                                                            "std.max": 20,
                                                            "std.avg": 4,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 2000,
                                                            "std.min": 20,
                                                            "std.max": 30,
                                                            "std.avg": 100,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.1"
                                                },
                                                "dependents": 
                                                ["aggregation.aggregation.p3.txStackName@2293[inherent,total]"],
                                                "children": 
                                                [
                                                    {
                                                        "id": "183@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "metric1⟶metric2⟶exit",
                                                        "componentType": "txExit",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@2308[inherent,total]"]
                                                    },
                                                    {
                                                        "id": "196@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "metric1⟶metric2⟶syncExit",
                                                        "componentType": "txIntermediateExit",
                                                        "flags": "[leaf, sync]",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary",
                                                            "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "type": "sync"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@2368[inherent,total]"],
                                                        "childEntryPoint": 
                                                        {
                                                            "id": "226@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "metric": "",
                                                            "componentType": "txSecondary",
                                                            "flags": "[sync]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "inherent": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 80,
                                                                        "std.min": 1,
                                                                        "std.max": 20,
                                                                        "std.avg": 4,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    },
                                                                    "total": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 2000,
                                                                        "std.min": 20,
                                                                        "std.max": 30,
                                                                        "std.avg": 100,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "metricType2": "error"
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.1"
                                                            },
                                                            "dependents": 
                                                            ["aggregation.aggregation.p3.txStackName@2383[inherent,total]"],
                                                            "children": 
                                                            [
                                                                {
                                                                    "id": "248@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "metric1⟶metric2⟶exit",
                                                                    "componentType": "txExit",
                                                                    "measurements": 
                                                                    {
                                                                        "metricType1": 
                                                                        {
                                                                            "inherent": 
                                                                            {
                                                                                "std.count": 20,
                                                                                "std.sum": 20,
                                                                                "std.min": 1,
                                                                                "std.max": 10,
                                                                                "std.avg": 1,
                                                                                "anomaly(std.avg).score": 0.5,
                                                                                "anomaly(std.avg).level": "error",
                                                                                "anomaly(std.avg).primary": true,
                                                                                "forecast(std.count).score": 0.5,
                                                                                "forecast(std.count).level": "error",
                                                                                "forecast(std.count).primary": true,
                                                                                "forecast(std.count).predictions": 
                                                                                [
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "total": 
                                                                            {
                                                                                "std.count": 20,
                                                                                "std.sum": 20,
                                                                                "std.min": 1,
                                                                                "std.max": 10,
                                                                                "std.avg": 1,
                                                                                "anomaly(std.avg).score": 0.5,
                                                                                "anomaly(std.avg).level": "error",
                                                                                "anomaly(std.avg).primary": true,
                                                                                "forecast(std.count).score": 0.5,
                                                                                "forecast(std.count).level": "error",
                                                                                "forecast(std.count).primary": true,
                                                                                "forecast(std.count).predictions": 
                                                                                [
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "metricType2": "error"
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.4",
                                                                        "parent": "txStack",
                                                                        "entry": "txSecondary"
                                                                    },
                                                                    "dependents": 
                                                                    ["aggregation.aggregation.p3.txStackName@2398[inherent,total]"]
                                                                }
                                                            ],
                                                            "logs": 
                                                            [
                                                                {
                                                                    "id": "261@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "",
                                                                    "componentType": "txSecondaryLog",
                                                                    "measurements": 
                                                                    {
                                                                        "txSecondaryLog": 
                                                                        {
                                                                            "transactionId": 3,
                                                                            "value": "testLog9"
                                                                        }
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.6",
                                                                        "entry": "txSecondary"
                                                                    }
                                                                },
                                                                {
                                                                    "id": "269@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "",
                                                                    "componentType": "txSecondaryError",
                                                                    "measurements": 
                                                                    {
                                                                        "txSecondaryError": 
                                                                        {
                                                                            "transactionId": 2,
                                                                            "stackTrace": 
                                                                            [
                                                                                {
                                                                                    "class": "testClass31",
                                                                                    "method": "testMethod33"
                                                                                },
                                                                                {
                                                                                    "class": "testClass32",
                                                                                    "method": "testMethod32"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.7",
                                                                        "entry": "txSecondary"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "logs": 
                                                [
                                                    {
                                                        "id": "210@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "",
                                                        "componentType": "txSecondaryLog",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryLog": 
                                                            {
                                                                "transactionId": 3,
                                                                "value": "testLog9"
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.6",
                                                            "entry": "txSecondary"
                                                        }
                                                    },
                                                    {
                                                        "id": "218@aggregation-aggregation-p3-46/data-46.dt[0]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "",
                                                        "componentType": "txSecondaryError",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryError": 
                                                            {
                                                                "transactionId": 2,
                                                                "stackTrace": 
                                                                [
                                                                    {
                                                                        "class": "testClass31",
                                                                        "method": "testMethod31"
                                                                    },
                                                                    {
                                                                        "class": "testClass32",
                                                                        "method": "testMethod32"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.7",
                                                            "entry": "txSecondary"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "logs": 
                                    [
                                        {
                                            "id": "94@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "",
                                            "componentType": "txPrimaryLog",
                                            "measurements": 
                                            {
                                                "txPrimaryLog": 
                                                {
                                                    "transactionId": 3,
                                                    "value": "testLog3"
                                                }
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.6",
                                                "entry": "txPrimary"
                                            }
                                        },
                                        {
                                            "id": "102@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "",
                                            "componentType": "txPrimaryError",
                                            "measurements": 
                                            {
                                                "txPrimaryError": 
                                                {
                                                    "transactionId": 2,
                                                    "stackTrace": 
                                                    [
                                                        {
                                                            "class": "class1",
                                                            "method": "testMethod1"
                                                        },
                                                        {
                                                            "class": "testClass2",
                                                            "method": "testMethod3"
                                                        }
                                                    ]
                                                }
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.7",
                                                "entry": "txPrimary"
                                            }
                                        }
                                    ],
                                    "failures": 
                                    {
                                        "id": "45@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.b.primary",
                                        "metric": "",
                                        "componentType": "txFailureLog",
                                        "measurements": 
                                        {
                                            "txFailureLog": ""
                                        }
                                    },
                                    "anomalies": 
                                    {
                                        "id": "2885@aggregation-aggregation-p3-46/data-46.dt[0]",
                                        "scope": "a.b.primary",
                                        "metric": "",
                                        "componentType": "anomaliesLog",
                                        "measurements": 
                                        {
                                            "anomaliesLog": 
                                            {
                                                "scopeId": 19,
                                                "metricId": 7,
                                                "componentType": "txExit",
                                                "causes": 
                                                ["metricType1.anomaly(std.avg)"]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "2158@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 80,
                                "std.sum": 320,
                                "std.min": 1,
                                "std.max": 20,
                                "std.avg": 4,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 40,
                                "std.sum": 4000,
                                "std.min": 20,
                                "std.max": 30,
                                "std.avg": 100,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.1"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "2173@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "2188@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 80,
                                                "std.min": 1,
                                                "std.max": 20,
                                                "std.avg": 4,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 2000,
                                                "std.min": 20,
                                                "std.max": 30,
                                                "std.avg": 100,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.1"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txPrimary@23[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "2293@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 160,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 4000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txSecondary@110[inherent,total]", "aggregation.aggregation.p3.txSecondary@161[inherent,total]"]
                        },
                        {
                            "id": "2383@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.d",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txSecondary@226[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "2203@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "exit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 80,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 80,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txSecondary"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "2218@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "2233@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "exit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txExit@53[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "2308@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 40,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 40,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txExit@132[inherent,total]", "aggregation.aggregation.p3.txExit@183[inherent,total]"]
                        },
                        {
                            "id": "2398@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.d",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txExit@248[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "2248@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "syncExit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 40,
                                "std.sum": 40,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 40,
                                "std.sum": 40,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txSecondary",
                        "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                        "type": "sync"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "2263@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "syncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary",
                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                "type": "sync"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "2278@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "syncExit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary",
                                        "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                        "type": "sync"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txIntermediateExit@66[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "2368@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.c",
                            "metric": "syncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary",
                                "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                "type": "sync"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txIntermediateExit@196[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "2323@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "asyncExit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 20,
                                "std.sum": 20,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 20,
                                "std.sum": 20,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txPrimary",
                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                        "type": "async"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "2338@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "asyncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary",
                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                "type": "async"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "2353@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "asyncExit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary",
                                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                        "type": "async"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txIntermediateExit@80[inherent,total]"]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "2413@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "class1",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 2,
                            "std.sum": 2,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "2426@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "class1.method1",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:class1.method1 (2452@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        },
                        {
                            "id": "2491@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "class1.testMethod1",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:class1.testMethod1 (2504@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "2439@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "class1",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "2452@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "class1.method1",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:class1.method1 (2478@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "2504@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "class1.testMethod1",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:class1.testMethod1 (2517@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "2465@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "class1",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "2478@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "class1.method1",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        },
                                        {
                                            "id": "2517@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "class1.testMethod1",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "2530@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "class21",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 1,
                            "std.sum": 1,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "2543@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "class21.method21",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:class21.method21 (2573@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "2560@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "class21",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "2573@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "class21.method21",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:class21.method21 (2599@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "2586@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "class21",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "2599@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "class21.method21",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "2612@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "testClass21",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 1,
                            "std.sum": 1,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "2625@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "testClass21.testMethod21",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:testClass21.testMethod21 (2651@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "2638@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "testClass21",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "2651@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "testClass21.testMethod21",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:testClass21.testMethod21 (2677@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "2664@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "testClass21",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "2677@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "testClass21.testMethod21",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "2690@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "class31",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 1,
                            "std.sum": 1,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "2703@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "class31.method31",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:class31.method31 (2729@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "2716@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "class31",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "2729@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "class31.method31",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:class31.method31 (2755@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "2742@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "class31",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "2755@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "class31.method31",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "2768@aggregation-aggregation-p3-46/data-46.dt[0]",
                    "scope": "a",
                    "metric": "testClass31",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 2,
                            "std.sum": 2,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "2781@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "testClass31.testMethod31",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:testClass31.testMethod31 (2807@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        },
                        {
                            "id": "2846@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a",
                            "metric": "testClass31.testMethod33",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:testClass31.testMethod33 (2859@aggregation-aggregation-p3-46/data-46.dt[0])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "2794@aggregation-aggregation-p3-46/data-46.dt[0]",
                            "scope": "a.b",
                            "metric": "testClass31",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "2807@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "testClass31.testMethod31",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:testClass31.testMethod31 (2833@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                },
                                {
                                    "id": "2859@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b",
                                    "metric": "testClass31.testMethod33",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:testClass31.testMethod33 (2872@aggregation-aggregation-p3-46/data-46.dt[0])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "2820@aggregation-aggregation-p3-46/data-46.dt[0]",
                                    "scope": "a.b.primary",
                                    "metric": "testClass31",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "2833@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "testClass31.testMethod31",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        },
                                        {
                                            "id": "2872@aggregation-aggregation-p3-46/data-46.dt[0]",
                                            "scope": "a.b.primary",
                                            "metric": "testClass31.testMethod33",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "<orphaned>": 
        []
    },
    "period 1": 
    {
        "<root>": 
        {
            "id": "3392@aggregation-aggregation-p3-46/data-46.dt[1]",
            "scope": "",
            "metric": "",
            "nodes": 
            [
                {
                    "id": "3953@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "txPrimaryError",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 4,
                            "std.sum": 4,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "3968@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txPrimaryError.TestException1&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "3983@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txPrimaryError.TestException1&.class1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "3998@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a",
                                            "metric": "txPrimaryError.TestException1&.class1.method1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.b, location:txPrimaryError.TestException1&.class1.method1 (4058@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b, location:txPrimaryError.TestException1&.class1 (4043@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.b, location:txPrimaryError.TestException1& (4028@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "4013@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "txPrimaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4028@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "txPrimaryError.TestException1&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4043@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b",
                                            "metric": "txPrimaryError.TestException1&.class1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4058@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.b",
                                                    "metric": "txPrimaryError.TestException1&.class1.method1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.b.primary, location:txPrimaryError.TestException1&.class1.method1 (3803@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.b.primary, location:txPrimaryError.TestException1&.class1 (4111@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:txPrimaryError.TestException1& (4096@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "4073@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "txPrimaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4096@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "txPrimaryError.TestException1&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4111@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.b.primary",
                                                    "metric": "txPrimaryError.TestException1&.class1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "3803@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.b.primary",
                                                            "metric": "txPrimaryError.TestException1&.class1.method1",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 4,
                                                                    "std.sum": 4,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txPrimary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "4126@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "txPrimaryError&",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 4,
                            "std.sum": 4,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "4141@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txPrimaryError&.class1",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4156@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txPrimaryError&.class1.testMethod1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b, location:txPrimaryError&.class1.testMethod1 (4201@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.b, location:txPrimaryError&.class1 (4186@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "4171@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "txPrimaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4186@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "txPrimaryError&.class1",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4201@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b",
                                            "metric": "txPrimaryError&.class1.testMethod1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.b.primary, location:txPrimaryError&.class1.testMethod1 (3818@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:txPrimaryError&.class1 (4231@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "4216@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "txPrimaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4231@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "txPrimaryError&.class1",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3818@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.b.primary",
                                                    "metric": "txPrimaryError&.class1.testMethod1",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 4,
                                                            "std.sum": 4,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txPrimary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "4246@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "txSecondaryError",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 6,
                            "std.sum": 6,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "4261@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError.TestException2&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4276@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError.TestException2&.class21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4291@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a",
                                            "metric": "txSecondaryError.TestException2&.class21.method21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c, location:txSecondaryError.TestException2&.class21.method21 (4351@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError.TestException2&.class21 (4336@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError.TestException2& (4321@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        },
                        {
                            "id": "4608@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError.TestException3&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4623@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError.TestException3&.class31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4638@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a",
                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c, location:txSecondaryError.TestException3&.class31.method31 (4683@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError.TestException3&.class31.method31 (4878@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError.TestException3&.class31 (4668@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError.TestException3&.class31 (4863@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError.TestException3& (4653@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError.TestException3& (4848@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "4306@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "txSecondaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4321@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError.TestException2&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4336@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError.TestException2&.class21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4351@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c",
                                                    "metric": "txSecondaryError.TestException2&.class21.method21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2&.class21.method21 (3833@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2&.class21 (4396@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError.TestException2& (4381@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "4653@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError.TestException3&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4668@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError.TestException3&.class31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4683@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c",
                                                    "metric": "txSecondaryError.TestException3&.class31.method31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3&.class31.method31 (3878@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3&.class31 (4728@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError.TestException3& (4713@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "4366@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4381@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError.TestException2&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4396@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError.TestException2&.class21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "3833@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                            "metric": "txSecondaryError.TestException2&.class21.method21",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "id": "4698@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4713@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                            "metric": "txSecondaryError.TestException3&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4728@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                    "metric": "txSecondaryError.TestException3&.class31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "3878@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "4833@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.d",
                            "metric": "txSecondaryError",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4848@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.d",
                                    "metric": "txSecondaryError.TestException3&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4863@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError.TestException3&.class31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4878@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d",
                                                    "metric": "txSecondaryError.TestException3&.class31.method31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "scopeChildren": 
                                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3&.class31.method31 (3908@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3&.class31 (4923@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError.TestException3& (4908@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "4893@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "metric": "txSecondaryError",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4908@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "metric": "txSecondaryError.TestException3&",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "4923@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError.TestException3&.class31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metricChildren": 
                                                    [
                                                        {
                                                            "id": "3908@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "metric": "txSecondaryError.TestException3&.class31.method31",
                                                            "componentType": "txErrorName",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "std.count": 2,
                                                                    "std.sum": 2,
                                                                    "std.min": 1,
                                                                    "std.max": 1,
                                                                    "std.avg": 1
                                                                }
                                                            },
                                                            "metadata": 
                                                            {
                                                                "main": "txSecondary"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "4411@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "txSecondaryError&",
                    "componentType": "txErrorName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 10,
                            "std.sum": 10,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "4426@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass21",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4441@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass21.testMethod21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass21.testMethod21 (4486@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass21 (4471@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        },
                        {
                            "id": "4531@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass23",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4546@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass23.testMethod23",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass23.testMethod23 (4576@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass23 (4561@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        },
                        {
                            "id": "4743@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "txSecondaryError&.testClass31",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 6,
                                    "std.sum": 6,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4758@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.c, location:txSecondaryError&.testClass31.testMethod31 (4788@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError&.testClass31.testMethod31 (4968@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "5013@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a",
                                    "metric": "txSecondaryError&.testClass31.testMethod33",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.d, location:txSecondaryError&.testClass31.testMethod33 (5028@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            ["scope:a.c, location:txSecondaryError&.testClass31 (4773@aggregation-aggregation-p3-46/data-46.dt[1])", "scope:a.d, location:txSecondaryError&.testClass31 (4953@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "4456@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "txSecondaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 6,
                                    "std.sum": 6,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4471@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass21",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4486@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass21.testMethod21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass21.testMethod21 (3848@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass21 (4516@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "4561@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass23",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4576@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass23.testMethod23",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass23.testMethod23 (3863@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location:txSecondaryError&.testClass23 (4591@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "4773@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c",
                                    "metric": "txSecondaryError&.testClass31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4788@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c",
                                            "metric": "txSecondaryError&.testClass31.testMethod31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError&.testClass31.testMethod31 (3893@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location:txSecondaryError&.testClass31 (4818@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "4501@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4516@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError&.testClass21",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3848@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError&.testClass21.testMethod21",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            "id": "4591@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                            "metric": "txSecondaryError&.testClass23",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3863@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                    "metric": "txSecondaryError&.testClass23.testMethod23",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "id": "4803@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4818@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                            "metric": "txSecondaryError&.testClass31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3893@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "id": "4938@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.d",
                            "metric": "txSecondaryError&",
                            "componentType": "txErrorName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 4,
                                    "std.sum": 4,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "4953@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.d",
                                    "metric": "txSecondaryError&.testClass31",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4968@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError&.testClass31.testMethod31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31.testMethod31 (3923@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        },
                                        {
                                            "id": "5028@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d",
                                            "metric": "txSecondaryError&.testClass31.testMethod33",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "scopeChildren": 
                                            ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31.testMethod33 (3938@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    ],
                                    "scopeChildren": 
                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location:txSecondaryError&.testClass31 (4998@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "4983@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                    "metric": "txSecondaryError&",
                                    "componentType": "txErrorName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 4,
                                            "std.sum": 4,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "4998@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "metric": "txSecondaryError&.testClass31",
                                            "componentType": "txErrorName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 4,
                                                    "std.sum": 4,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            },
                                            "metricChildren": 
                                            [
                                                {
                                                    "id": "3923@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError&.testClass31.testMethod31",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                },
                                                {
                                                    "id": "3938@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "metric": "txSecondaryError&.testClass31.testMethod33",
                                                    "componentType": "txErrorName",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "std.count": 2,
                                                            "std.sum": 2,
                                                            "std.min": 1,
                                                            "std.max": 1,
                                                            "std.avg": 1
                                                        }
                                                    },
                                                    "metadata": 
                                                    {
                                                        "main": "txSecondary"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "5043@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "",
                    "componentType": "txPrimary",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 20,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 20,
                                "std.avg": 4,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 20,
                                "std.sum": 2000,
                                "std.min": 20,
                                "std.max": 30,
                                "std.avg": 100,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.1"
                    },
                    "children": 
                    [
                        {
                            "id": "5065@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶exit",
                            "componentType": "txExit",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary"
                            }
                        },
                        {
                            "id": "5078@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶syncExit.a",
                            "componentType": "txIntermediateExit",
                            "flags": "[derived, sync, scopeInner]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary",
                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                "type": "sync"
                            },
                            "childEntryPoint": 
                            {
                                "id": "5092@aggregation-aggregation-p3-46/data-46.dt[1]",
                                "scope": "a.00000000-0000-003d-0000-00000000003e",
                                "metric": "",
                                "componentType": "txSecondary",
                                "flags": "[derived, sync, scopeInner]",
                                "measurements": 
                                {
                                    "metricType1": 
                                    {
                                        "inherent": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 80,
                                            "std.min": 1,
                                            "std.max": 20,
                                            "std.avg": 4,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        },
                                        "total": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 2000,
                                            "std.min": 20,
                                            "std.max": 30,
                                            "std.avg": 100,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        }
                                    },
                                    "metricType2": "error"
                                },
                                "metadata": 
                                {
                                    "key": "value-1.1"
                                },
                                "children": 
                                [
                                    {
                                        "id": "5120@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003d-0000-00000000003e",
                                        "metric": "metric1⟶metric2⟶exit",
                                        "componentType": "txExit",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "logs": 
                                [
                                    {
                                        "id": "5133@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003d-0000-00000000003e",
                                        "metric": "",
                                        "componentType": "txSecondaryLog",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryLog": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.6",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "5141@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003d-0000-00000000003e",
                                        "metric": "",
                                        "componentType": "txSecondaryError",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryError": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.7",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "scopeChildren": 
                                ["scope:a.c.00000000-0000-0043-0000-000000000044, location: (5344@aggregation-aggregation-p3-46/data-46.dt[1])"]
                            }
                        },
                        {
                            "id": "5149@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "metric1⟶metric2⟶asyncExit.a",
                            "componentType": "txIntermediateExit",
                            "flags": "[derived, scopeInner]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary",
                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                "type": "async"
                            },
                            "childEntryPoint": 
                            {
                                "id": "5163@aggregation-aggregation-p3-46/data-46.dt[1]",
                                "scope": "a.00000000-0000-003f-0000-000000000040",
                                "metric": "",
                                "componentType": "txSecondary",
                                "flags": "[derived, scopeInner]",
                                "measurements": 
                                {
                                    "metricType1": 
                                    {
                                        "inherent": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 80,
                                            "std.min": 1,
                                            "std.max": 20,
                                            "std.avg": 4,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        },
                                        "total": 
                                        {
                                            "std.count": 20,
                                            "std.sum": 2000,
                                            "std.min": 20,
                                            "std.max": 30,
                                            "std.avg": 100,
                                            "anomaly(std.avg).score": 0.5,
                                            "anomaly(std.avg).level": "error",
                                            "anomaly(std.avg).primary": true,
                                            "forecast(std.count).score": 0.5,
                                            "forecast(std.count).level": "error",
                                            "forecast(std.count).primary": true,
                                            "forecast(std.count).predictions": 
                                            [
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                },
                                                {
                                                    "value": 20
                                                }
                                            ]
                                        }
                                    },
                                    "metricType2": "error"
                                },
                                "metadata": 
                                {
                                    "key": "value-1.1"
                                },
                                "children": 
                                [
                                    {
                                        "id": "5185@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003f-0000-000000000040",
                                        "metric": "metric1⟶metric2⟶exit",
                                        "componentType": "txExit",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "5198@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003f-0000-000000000040",
                                        "metric": "metric1⟶metric2⟶syncExit.a",
                                        "componentType": "txIntermediateExit",
                                        "flags": "[derived, sync, scopeInner]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 20,
                                                    "std.min": 1,
                                                    "std.max": 10,
                                                    "std.avg": 1,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.4",
                                            "parent": "txStack",
                                            "entry": "txSecondary",
                                            "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                            "type": "sync"
                                        },
                                        "childEntryPoint": 
                                        {
                                            "id": "5212@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.00000000-0000-0041-0000-000000000042",
                                            "metric": "",
                                            "componentType": "txSecondary",
                                            "flags": "[derived, sync, scopeInner]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 80,
                                                        "std.min": 1,
                                                        "std.max": 20,
                                                        "std.avg": 4,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 2000,
                                                        "std.min": 20,
                                                        "std.max": 30,
                                                        "std.avg": 100,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.1"
                                            },
                                            "children": 
                                            [
                                                {
                                                    "id": "5234@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.00000000-0000-0041-0000-000000000042",
                                                    "metric": "metric1⟶metric2⟶exit",
                                                    "componentType": "txExit",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "inherent": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 20,
                                                                "std.min": 1,
                                                                "std.max": 10,
                                                                "std.avg": 1,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            },
                                                            "total": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 20,
                                                                "std.min": 1,
                                                                "std.max": 10,
                                                                "std.avg": 1,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metricType2": "error"
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.4",
                                                        "parent": "txStack",
                                                        "entry": "txSecondary"
                                                    }
                                                }
                                            ],
                                            "logs": 
                                            [
                                                {
                                                    "id": "5247@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.00000000-0000-0041-0000-000000000042",
                                                    "metric": "",
                                                    "componentType": "txSecondaryLog",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "txSecondaryLog": ""
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.6",
                                                        "entry": "txSecondary"
                                                    }
                                                },
                                                {
                                                    "id": "5255@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.00000000-0000-0041-0000-000000000042",
                                                    "metric": "",
                                                    "componentType": "txSecondaryError",
                                                    "flags": "[derived]",
                                                    "measurements": 
                                                    {
                                                        "txSecondaryError": ""
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.7",
                                                        "entry": "txSecondary"
                                                    }
                                                }
                                            ],
                                            "scopeChildren": 
                                            ["scope:a.d.00000000-0000-0047-0000-000000000048, location: (5458@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                        }
                                    }
                                ],
                                "logs": 
                                [
                                    {
                                        "id": "5263@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003f-0000-000000000040",
                                        "metric": "",
                                        "componentType": "txSecondaryLog",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryLog": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.6",
                                            "entry": "txSecondary"
                                        }
                                    },
                                    {
                                        "id": "5271@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.00000000-0000-003f-0000-000000000040",
                                        "metric": "",
                                        "componentType": "txSecondaryError",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "txSecondaryError": ""
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.7",
                                            "entry": "txSecondary"
                                        }
                                    }
                                ],
                                "scopeChildren": 
                                ["scope:a.c.00000000-0000-0045-0000-000000000046, location: (5409@aggregation-aggregation-p3-46/data-46.dt[1])"]
                            }
                        }
                    ],
                    "logs": 
                    [
                        {
                            "id": "5279@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "",
                            "componentType": "txPrimaryLog",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "txPrimaryLog": ""
                            },
                            "metadata": 
                            {
                                "key": "value-1.6",
                                "entry": "txPrimary"
                            }
                        },
                        {
                            "id": "5287@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "",
                            "componentType": "txPrimaryError",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "txPrimaryError": ""
                            },
                            "metadata": 
                            {
                                "key": "value-1.7",
                                "entry": "txPrimary"
                            }
                        }
                    ],
                    "anomalies": 
                    {
                        "id": "6282@aggregation-aggregation-p3-46/data-46.dt[1]",
                        "scope": "a",
                        "metric": "",
                        "componentType": "anomaliesLog",
                        "measurements": 
                        {
                            "anomaliesLog": ""
                        }
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "5295@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "",
                            "componentType": "txPrimary",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "children": 
                            [
                                {
                                    "id": "5317@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶exit",
                                    "componentType": "txExit",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary"
                                    }
                                },
                                {
                                    "id": "5330@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶syncExit.a.c",
                                    "componentType": "txIntermediateExit",
                                    "flags": "[derived, sync]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary",
                                        "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                        "type": "sync"
                                    },
                                    "childEntryPoint": 
                                    {
                                        "id": "5344@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.c.00000000-0000-0043-0000-000000000044",
                                        "metric": "",
                                        "componentType": "txSecondary",
                                        "flags": "[derived, sync]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 80,
                                                    "std.min": 1,
                                                    "std.max": 20,
                                                    "std.avg": 4,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 2000,
                                                    "std.min": 20,
                                                    "std.max": 30,
                                                    "std.avg": 100,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.1"
                                        },
                                        "children": 
                                        [
                                            {
                                                "id": "5366@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                                                "metric": "metric1⟶metric2⟶exit",
                                                "componentType": "txExit",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "logs": 
                                        [
                                            {
                                                "id": "5379@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                                                "metric": "",
                                                "componentType": "txSecondaryLog",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryLog": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.6",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "5387@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0043-0000-000000000044",
                                                "metric": "",
                                                "componentType": "txSecondaryError",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryError": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.7",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "scopeChildren": 
                                        ["scope:a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4, location: (3496@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                    }
                                },
                                {
                                    "id": "5395@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "metric1⟶metric2⟶asyncExit.a.c",
                                    "componentType": "txIntermediateExit",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary",
                                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                        "type": "async"
                                    },
                                    "childEntryPoint": 
                                    {
                                        "id": "5409@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                        "metric": "",
                                        "componentType": "txSecondary",
                                        "flags": "[derived]",
                                        "measurements": 
                                        {
                                            "metricType1": 
                                            {
                                                "inherent": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 80,
                                                    "std.min": 1,
                                                    "std.max": 20,
                                                    "std.avg": 4,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                },
                                                "total": 
                                                {
                                                    "std.count": 20,
                                                    "std.sum": 2000,
                                                    "std.min": 20,
                                                    "std.max": 30,
                                                    "std.avg": 100,
                                                    "anomaly(std.avg).score": 0.5,
                                                    "anomaly(std.avg).level": "error",
                                                    "anomaly(std.avg).primary": true,
                                                    "forecast(std.count).score": 0.5,
                                                    "forecast(std.count).level": "error",
                                                    "forecast(std.count).primary": true,
                                                    "forecast(std.count).predictions": 
                                                    [
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        },
                                                        {
                                                            "value": 20
                                                        }
                                                    ]
                                                }
                                            },
                                            "metricType2": "error"
                                        },
                                        "metadata": 
                                        {
                                            "key": "value-1.1"
                                        },
                                        "children": 
                                        [
                                            {
                                                "id": "5431@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                                "metric": "metric1⟶metric2⟶exit",
                                                "componentType": "txExit",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "5444@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                                "metric": "metric1⟶metric2⟶syncExit.a.d",
                                                "componentType": "txIntermediateExit",
                                                "flags": "[derived, sync]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 20,
                                                            "std.min": 1,
                                                            "std.max": 10,
                                                            "std.avg": 1,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.4",
                                                    "parent": "txStack",
                                                    "entry": "txSecondary",
                                                    "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                    "type": "sync"
                                                },
                                                "childEntryPoint": 
                                                {
                                                    "id": "5458@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                    "scope": "a.d.00000000-0000-0047-0000-000000000048",
                                                    "metric": "",
                                                    "componentType": "txSecondary",
                                                    "flags": "[derived, sync]",
                                                    "measurements": 
                                                    {
                                                        "metricType1": 
                                                        {
                                                            "inherent": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 80,
                                                                "std.min": 1,
                                                                "std.max": 20,
                                                                "std.avg": 4,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            },
                                                            "total": 
                                                            {
                                                                "std.count": 20,
                                                                "std.sum": 2000,
                                                                "std.min": 20,
                                                                "std.max": 30,
                                                                "std.avg": 100,
                                                                "anomaly(std.avg).score": 0.5,
                                                                "anomaly(std.avg).level": "error",
                                                                "anomaly(std.avg).primary": true,
                                                                "forecast(std.count).score": 0.5,
                                                                "forecast(std.count).level": "error",
                                                                "forecast(std.count).primary": true,
                                                                "forecast(std.count).predictions": 
                                                                [
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    },
                                                                    {
                                                                        "value": 20
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metricType2": "error"
                                                    },
                                                    "metadata": 
                                                    {
                                                        "key": "value-1.1"
                                                    },
                                                    "children": 
                                                    [
                                                        {
                                                            "id": "5480@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.00000000-0000-0047-0000-000000000048",
                                                            "metric": "metric1⟶metric2⟶exit",
                                                            "componentType": "txExit",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "inherent": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 20,
                                                                        "std.min": 1,
                                                                        "std.max": 10,
                                                                        "std.avg": 1,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    },
                                                                    "total": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 20,
                                                                        "std.min": 1,
                                                                        "std.max": 10,
                                                                        "std.avg": 1,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "metricType2": "error"
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.4",
                                                                "parent": "txStack",
                                                                "entry": "txSecondary"
                                                            }
                                                        }
                                                    ],
                                                    "logs": 
                                                    [
                                                        {
                                                            "id": "5493@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.00000000-0000-0047-0000-000000000048",
                                                            "metric": "",
                                                            "componentType": "txSecondaryLog",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "txSecondaryLog": ""
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.6",
                                                                "entry": "txSecondary"
                                                            }
                                                        },
                                                        {
                                                            "id": "5501@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.00000000-0000-0047-0000-000000000048",
                                                            "metric": "",
                                                            "componentType": "txSecondaryError",
                                                            "flags": "[derived]",
                                                            "measurements": 
                                                            {
                                                                "txSecondaryError": ""
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.7",
                                                                "entry": "txSecondary"
                                                            }
                                                        }
                                                    ],
                                                    "scopeChildren": 
                                                    ["scope:a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5, location: (3614@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                                }
                                            }
                                        ],
                                        "logs": 
                                        [
                                            {
                                                "id": "5509@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                                "metric": "",
                                                "componentType": "txSecondaryLog",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryLog": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.6",
                                                    "entry": "txSecondary"
                                                }
                                            },
                                            {
                                                "id": "5517@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.00000000-0000-0045-0000-000000000046",
                                                "metric": "",
                                                "componentType": "txSecondaryError",
                                                "flags": "[derived]",
                                                "measurements": 
                                                {
                                                    "txSecondaryError": ""
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.7",
                                                    "entry": "txSecondary"
                                                }
                                            }
                                        ],
                                        "scopeChildren": 
                                        ["scope:a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3, location: (3547@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                    }
                                }
                            ],
                            "logs": 
                            [
                                {
                                    "id": "5525@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "",
                                    "componentType": "txPrimaryLog",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "txPrimaryLog": ""
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.6",
                                        "entry": "txPrimary"
                                    }
                                },
                                {
                                    "id": "5533@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "",
                                    "componentType": "txPrimaryError",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "txPrimaryError": ""
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.7",
                                        "entry": "txPrimary"
                                    }
                                }
                            ],
                            "anomalies": 
                            {
                                "id": "6290@aggregation-aggregation-p3-46/data-46.dt[1]",
                                "scope": "a.b",
                                "metric": "",
                                "componentType": "anomaliesLog",
                                "measurements": 
                                {
                                    "anomaliesLog": ""
                                }
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "3409@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "",
                                    "componentType": "txPrimary",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 80,
                                                "std.min": 1,
                                                "std.max": 20,
                                                "std.avg": 4,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 2000,
                                                "std.min": 20,
                                                "std.max": 30,
                                                "std.avg": 100,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.1"
                                    },
                                    "dependents": 
                                    ["aggregation.aggregation.p3.txStackName@5571[inherent,total]"],
                                    "children": 
                                    [
                                        {
                                            "id": "3439@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "metric1⟶metric2⟶exit",
                                            "componentType": "txExit",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "entry": "txPrimary"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@5616[inherent,total]"]
                                        },
                                        {
                                            "id": "3452@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "metric1⟶metric2⟶syncExit",
                                            "componentType": "txIntermediateExit",
                                            "flags": "[leaf, sync]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "entry": "txPrimary",
                                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                "type": "sync"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@5662[inherent,total]"],
                                            "childEntryPoint": 
                                            {
                                                "id": "3496@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                "metric": "",
                                                "componentType": "txSecondary",
                                                "flags": "[sync]",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 80,
                                                            "std.min": 1,
                                                            "std.max": 20,
                                                            "std.avg": 4,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 2000,
                                                            "std.min": 20,
                                                            "std.max": 30,
                                                            "std.avg": 100,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.1"
                                                },
                                                "dependents": 
                                                ["aggregation.aggregation.p3.txStackName@5677[inherent,total]"],
                                                "children": 
                                                [
                                                    {
                                                        "id": "3518@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "metric1⟶metric2⟶exit",
                                                        "componentType": "txExit",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@5692[inherent,total]"]
                                                    }
                                                ],
                                                "logs": 
                                                [
                                                    {
                                                        "id": "3531@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "",
                                                        "componentType": "txSecondaryLog",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryLog": 
                                                            {
                                                                "transactionId": 4,
                                                                "value": "testLog6"
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.6",
                                                            "entry": "txSecondary"
                                                        }
                                                    },
                                                    {
                                                        "id": "3539@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                                        "metric": "",
                                                        "componentType": "txSecondaryError",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryError": 
                                                            {
                                                                "transactionId": 3,
                                                                "stackTrace": 
                                                                [
                                                                    {
                                                                        "class": "testClass23",
                                                                        "method": "testMethod23"
                                                                    },
                                                                    {
                                                                        "class": "testClass23",
                                                                        "method": "testMethod23"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.7",
                                                            "entry": "txSecondary"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "id": "3466@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "metric1⟶metric2⟶asyncExit",
                                            "componentType": "txIntermediateExit",
                                            "flags": "[leaf]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "inherent": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    },
                                                    "total": 
                                                    {
                                                        "std.count": 20,
                                                        "std.sum": 20,
                                                        "std.min": 1,
                                                        "std.max": 10,
                                                        "std.avg": 1,
                                                        "anomaly(std.avg).score": 0.5,
                                                        "anomaly(std.avg).level": "error",
                                                        "anomaly(std.avg).primary": true,
                                                        "forecast(std.count).score": 0.5,
                                                        "forecast(std.count).level": "error",
                                                        "forecast(std.count).primary": true,
                                                        "forecast(std.count).predictions": 
                                                        [
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            },
                                                            {
                                                                "value": 20
                                                            }
                                                        ]
                                                    }
                                                },
                                                "metricType2": "error"
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.4",
                                                "parent": "txStack",
                                                "entry": "txPrimary",
                                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                "type": "async"
                                            },
                                            "dependents": 
                                            ["aggregation.aggregation.p3.txStackName@5737[inherent,total]"],
                                            "childEntryPoint": 
                                            {
                                                "id": "3547@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                "metric": "",
                                                "componentType": "txSecondary",
                                                "measurements": 
                                                {
                                                    "metricType1": 
                                                    {
                                                        "inherent": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 80,
                                                            "std.min": 1,
                                                            "std.max": 20,
                                                            "std.avg": 4,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        },
                                                        "total": 
                                                        {
                                                            "std.count": 20,
                                                            "std.sum": 2000,
                                                            "std.min": 20,
                                                            "std.max": 30,
                                                            "std.avg": 100,
                                                            "anomaly(std.avg).score": 0.5,
                                                            "anomaly(std.avg).level": "error",
                                                            "anomaly(std.avg).primary": true,
                                                            "forecast(std.count).score": 0.5,
                                                            "forecast(std.count).level": "error",
                                                            "forecast(std.count).primary": true,
                                                            "forecast(std.count).predictions": 
                                                            [
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                },
                                                                {
                                                                    "value": 20
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    "metricType2": "error"
                                                },
                                                "metadata": 
                                                {
                                                    "key": "value-1.1"
                                                },
                                                "dependents": 
                                                ["aggregation.aggregation.p3.txStackName@5677[inherent,total]"],
                                                "children": 
                                                [
                                                    {
                                                        "id": "3569@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "metric1⟶metric2⟶exit",
                                                        "componentType": "txExit",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@5692[inherent,total]"]
                                                    },
                                                    {
                                                        "id": "3584@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "metric1⟶metric2⟶syncExit",
                                                        "componentType": "txIntermediateExit",
                                                        "flags": "[leaf, sync]",
                                                        "measurements": 
                                                        {
                                                            "metricType1": 
                                                            {
                                                                "inherent": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                },
                                                                "total": 
                                                                {
                                                                    "std.count": 20,
                                                                    "std.sum": 20,
                                                                    "std.min": 1,
                                                                    "std.max": 10,
                                                                    "std.avg": 1,
                                                                    "anomaly(std.avg).score": 0.5,
                                                                    "anomaly(std.avg).level": "error",
                                                                    "anomaly(std.avg).primary": true,
                                                                    "forecast(std.count).score": 0.5,
                                                                    "forecast(std.count).level": "error",
                                                                    "forecast(std.count).primary": true,
                                                                    "forecast(std.count).predictions": 
                                                                    [
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        },
                                                                        {
                                                                            "value": 20
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "metricType2": "error"
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.4",
                                                            "parent": "txStack",
                                                            "entry": "txSecondary",
                                                            "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "type": "sync"
                                                        },
                                                        "dependents": 
                                                        ["aggregation.aggregation.p3.txStackName@5752[inherent,total]"],
                                                        "childEntryPoint": 
                                                        {
                                                            "id": "3614@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                            "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                            "metric": "",
                                                            "componentType": "txSecondary",
                                                            "flags": "[sync]",
                                                            "measurements": 
                                                            {
                                                                "metricType1": 
                                                                {
                                                                    "inherent": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 80,
                                                                        "std.min": 1,
                                                                        "std.max": 20,
                                                                        "std.avg": 4,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    },
                                                                    "total": 
                                                                    {
                                                                        "std.count": 20,
                                                                        "std.sum": 2000,
                                                                        "std.min": 20,
                                                                        "std.max": 30,
                                                                        "std.avg": 100,
                                                                        "anomaly(std.avg).score": 0.5,
                                                                        "anomaly(std.avg).level": "error",
                                                                        "anomaly(std.avg).primary": true,
                                                                        "forecast(std.count).score": 0.5,
                                                                        "forecast(std.count).level": "error",
                                                                        "forecast(std.count).primary": true,
                                                                        "forecast(std.count).predictions": 
                                                                        [
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            },
                                                                            {
                                                                                "value": 20
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                "metricType2": "error"
                                                            },
                                                            "metadata": 
                                                            {
                                                                "key": "value-1.1"
                                                            },
                                                            "dependents": 
                                                            ["aggregation.aggregation.p3.txStackName@5767[inherent,total]"],
                                                            "children": 
                                                            [
                                                                {
                                                                    "id": "3636@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "metric1⟶metric2⟶exit",
                                                                    "componentType": "txExit",
                                                                    "measurements": 
                                                                    {
                                                                        "metricType1": 
                                                                        {
                                                                            "inherent": 
                                                                            {
                                                                                "std.count": 20,
                                                                                "std.sum": 20,
                                                                                "std.min": 1,
                                                                                "std.max": 10,
                                                                                "std.avg": 1,
                                                                                "anomaly(std.avg).score": 0.5,
                                                                                "anomaly(std.avg).level": "error",
                                                                                "anomaly(std.avg).primary": true,
                                                                                "forecast(std.count).score": 0.5,
                                                                                "forecast(std.count).level": "error",
                                                                                "forecast(std.count).primary": true,
                                                                                "forecast(std.count).predictions": 
                                                                                [
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "total": 
                                                                            {
                                                                                "std.count": 20,
                                                                                "std.sum": 20,
                                                                                "std.min": 1,
                                                                                "std.max": 10,
                                                                                "std.avg": 1,
                                                                                "anomaly(std.avg).score": 0.5,
                                                                                "anomaly(std.avg).level": "error",
                                                                                "anomaly(std.avg).primary": true,
                                                                                "forecast(std.count).score": 0.5,
                                                                                "forecast(std.count).level": "error",
                                                                                "forecast(std.count).primary": true,
                                                                                "forecast(std.count).predictions": 
                                                                                [
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    },
                                                                                    {
                                                                                        "value": 20
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "metricType2": "error"
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.4",
                                                                        "parent": "txStack",
                                                                        "entry": "txSecondary"
                                                                    },
                                                                    "dependents": 
                                                                    ["aggregation.aggregation.p3.txStackName@5782[inherent,total]"]
                                                                }
                                                            ],
                                                            "logs": 
                                                            [
                                                                {
                                                                    "id": "3649@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "",
                                                                    "componentType": "txSecondaryLog",
                                                                    "measurements": 
                                                                    {
                                                                        "txSecondaryLog": 
                                                                        {
                                                                            "transactionId": 3,
                                                                            "value": "testLog9"
                                                                        }
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.6",
                                                                        "entry": "txSecondary"
                                                                    }
                                                                },
                                                                {
                                                                    "id": "3657@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                                    "scope": "a.d.test-b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                                                    "metric": "",
                                                                    "componentType": "txSecondaryError",
                                                                    "measurements": 
                                                                    {
                                                                        "txSecondaryError": 
                                                                        {
                                                                            "transactionId": 2,
                                                                            "stackTrace": 
                                                                            [
                                                                                {
                                                                                    "class": "testClass31",
                                                                                    "method": "testMethod33"
                                                                                },
                                                                                {
                                                                                    "class": "testClass32",
                                                                                    "method": "testMethod32"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "metadata": 
                                                                    {
                                                                        "key": "value-1.7",
                                                                        "entry": "txSecondary"
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "logs": 
                                                [
                                                    {
                                                        "id": "3598@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "",
                                                        "componentType": "txSecondaryLog",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryLog": 
                                                            {
                                                                "transactionId": 3,
                                                                "value": "testLog9"
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.6",
                                                            "entry": "txSecondary"
                                                        }
                                                    },
                                                    {
                                                        "id": "3606@aggregation-aggregation-p3-46/data-46.dt[1]",
                                                        "scope": "a.c.test-853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                                        "metric": "",
                                                        "componentType": "txSecondaryError",
                                                        "measurements": 
                                                        {
                                                            "txSecondaryError": 
                                                            {
                                                                "transactionId": 2,
                                                                "stackTrace": 
                                                                [
                                                                    {
                                                                        "class": "testClass31",
                                                                        "method": "testMethod31"
                                                                    },
                                                                    {
                                                                        "class": "testClass32",
                                                                        "method": "testMethod32"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        "metadata": 
                                                        {
                                                            "key": "value-1.7",
                                                            "entry": "txSecondary"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "logs": 
                                    [
                                        {
                                            "id": "3480@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "",
                                            "componentType": "txPrimaryLog",
                                            "measurements": 
                                            {
                                                "txPrimaryLog": 
                                                {
                                                    "transactionId": 3,
                                                    "value": "testLog3"
                                                }
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.6",
                                                "entry": "txPrimary"
                                            }
                                        },
                                        {
                                            "id": "3488@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "",
                                            "componentType": "txPrimaryError",
                                            "measurements": 
                                            {
                                                "txPrimaryError": 
                                                {
                                                    "transactionId": 2,
                                                    "stackTrace": 
                                                    [
                                                        {
                                                            "class": "class1",
                                                            "method": "testMethod1"
                                                        },
                                                        {
                                                            "class": "testClass2",
                                                            "method": "testMethod3"
                                                        }
                                                    ]
                                                }
                                            },
                                            "metadata": 
                                            {
                                                "key": "value-1.7",
                                                "entry": "txPrimary"
                                            }
                                        }
                                    ],
                                    "failures": 
                                    {
                                        "id": "3431@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.b.primary",
                                        "metric": "",
                                        "componentType": "txFailureLog",
                                        "measurements": 
                                        {
                                            "txFailureLog": ""
                                        }
                                    },
                                    "anomalies": 
                                    {
                                        "id": "6274@aggregation-aggregation-p3-46/data-46.dt[1]",
                                        "scope": "a.b.primary",
                                        "metric": "",
                                        "componentType": "anomaliesLog",
                                        "measurements": 
                                        {
                                            "anomaliesLog": 
                                            {
                                                "scopeId": 19,
                                                "metricId": 7,
                                                "componentType": "txExit",
                                                "causes": 
                                                ["metricType1.anomaly(std.avg)"]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "5541@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 80,
                                "std.sum": 320,
                                "std.min": 1,
                                "std.max": 20,
                                "std.avg": 4,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 40,
                                "std.sum": 4000,
                                "std.min": 20,
                                "std.max": 30,
                                "std.avg": 100,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.1"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "5556@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "5571@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 80,
                                                "std.min": 1,
                                                "std.max": 20,
                                                "std.avg": 4,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 2000,
                                                "std.min": 20,
                                                "std.max": 30,
                                                "std.avg": 100,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.1"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txPrimary@3409[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "5677@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 160,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 4000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txSecondary@3496[inherent,total]", "aggregation.aggregation.p3.txSecondary@3547[inherent,total]"]
                        },
                        {
                            "id": "5767@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.d",
                            "metric": "",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 80,
                                        "std.min": 1,
                                        "std.max": 20,
                                        "std.avg": 4,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 2000,
                                        "std.min": 20,
                                        "std.max": 30,
                                        "std.avg": 100,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.1"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txSecondary@3614[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "5586@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "exit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 80,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 80,
                                "std.sum": 80,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    },
                                    {
                                        "value": 80
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txSecondary"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "5601@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "5616@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "exit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txExit@3439[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "5692@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 40,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 40,
                                        "std.sum": 40,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            },
                                            {
                                                "value": 40
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txExit@3518[inherent,total]", "aggregation.aggregation.p3.txExit@3569[inherent,total]"]
                        },
                        {
                            "id": "5782@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.d",
                            "metric": "exit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txExit@3636[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "5632@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "syncExit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 40,
                                "std.sum": 40,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 40,
                                "std.sum": 40,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    },
                                    {
                                        "value": 40
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txSecondary",
                        "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                        "type": "sync"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "5647@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "syncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary",
                                "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                "type": "sync"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "5662@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "syncExit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary",
                                        "stackId": "7bdcd730-d38c-4ac3-8993-65ed771708a4",
                                        "type": "sync"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txIntermediateExit@3452[inherent,total]"]
                                }
                            ]
                        },
                        {
                            "id": "5752@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.c",
                            "metric": "syncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txSecondary",
                                "stackId": "b2ee6d0a-7848-4f98-800d-bf2e322431c5",
                                "type": "sync"
                            },
                            "dependencies": 
                            ["aggregation.aggregation.p3.txIntermediateExit@3584[inherent,total]"]
                        }
                    ]
                },
                {
                    "id": "5707@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "asyncExit",
                    "componentType": "txStackName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "inherent": 
                            {
                                "std.count": 20,
                                "std.sum": 20,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            },
                            "total": 
                            {
                                "std.count": 20,
                                "std.sum": 20,
                                "std.min": 1,
                                "std.max": 10,
                                "std.avg": 1,
                                "anomaly(std.avg).score": 0.5,
                                "anomaly(std.avg).level": "error",
                                "anomaly(std.avg).primary": true,
                                "forecast(std.count).score": 0.5,
                                "forecast(std.count).level": "error",
                                "forecast(std.count).primary": true,
                                "forecast(std.count).predictions": 
                                [
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    },
                                    {
                                        "value": 20
                                    }
                                ]
                            }
                        },
                        "metricType2": "error"
                    },
                    "metadata": 
                    {
                        "key": "value-1.4",
                        "parent": "txStack",
                        "entry": "txPrimary",
                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                        "type": "async"
                    },
                    "scopeChildren": 
                    [
                        {
                            "id": "5722@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "asyncExit",
                            "componentType": "txStackName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "inherent": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    },
                                    "total": 
                                    {
                                        "std.count": 20,
                                        "std.sum": 20,
                                        "std.min": 1,
                                        "std.max": 10,
                                        "std.avg": 1,
                                        "anomaly(std.avg).score": 0.5,
                                        "anomaly(std.avg).level": "error",
                                        "anomaly(std.avg).primary": true,
                                        "forecast(std.count).score": 0.5,
                                        "forecast(std.count).level": "error",
                                        "forecast(std.count).primary": true,
                                        "forecast(std.count).predictions": 
                                        [
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            },
                                            {
                                                "value": 20
                                            }
                                        ]
                                    }
                                },
                                "metricType2": "error"
                            },
                            "metadata": 
                            {
                                "key": "value-1.4",
                                "parent": "txStack",
                                "entry": "txPrimary",
                                "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                "type": "async"
                            },
                            "scopeChildren": 
                            [
                                {
                                    "id": "5737@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "asyncExit",
                                    "componentType": "txStackName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "inherent": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            },
                                            "total": 
                                            {
                                                "std.count": 20,
                                                "std.sum": 20,
                                                "std.min": 1,
                                                "std.max": 10,
                                                "std.avg": 1,
                                                "anomaly(std.avg).score": 0.5,
                                                "anomaly(std.avg).level": "error",
                                                "anomaly(std.avg).primary": true,
                                                "forecast(std.count).score": 0.5,
                                                "forecast(std.count).level": "error",
                                                "forecast(std.count).primary": true,
                                                "forecast(std.count).predictions": 
                                                [
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    },
                                                    {
                                                        "value": 20
                                                    }
                                                ]
                                            }
                                        },
                                        "metricType2": "error"
                                    },
                                    "metadata": 
                                    {
                                        "key": "value-1.4",
                                        "parent": "txStack",
                                        "entry": "txPrimary",
                                        "stackId": "853f7d7b-01cd-44bc-bda0-dc4c15a82bd3",
                                        "type": "async"
                                    },
                                    "dependencies": 
                                    ["aggregation.aggregation.p3.txIntermediateExit@3466[inherent,total]"]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "5797@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "class1",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 2,
                            "std.sum": 2,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "5810@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "class1.method1",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:class1.method1 (5836@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        },
                        {
                            "id": "5875@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "class1.testMethod1",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:class1.testMethod1 (5888@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "5823@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "class1",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "5836@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "class1.method1",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:class1.method1 (5862@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "5888@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "class1.testMethod1",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:class1.testMethod1 (5901@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "5849@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "class1",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "5862@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "class1.method1",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        },
                                        {
                                            "id": "5901@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "class1.testMethod1",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "5914@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "class21",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 1,
                            "std.sum": 1,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "5927@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "class21.method21",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:class21.method21 (5953@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "5940@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "class21",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "5953@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "class21.method21",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:class21.method21 (5979@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "5966@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "class21",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "5979@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "class21.method21",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "5992@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "testClass21",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 1,
                            "std.sum": 1,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "6005@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "testClass21.testMethod21",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:testClass21.testMethod21 (6031@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "6018@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "testClass21",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "6031@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "testClass21.testMethod21",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:testClass21.testMethod21 (6057@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "6044@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "testClass21",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "6057@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "testClass21.testMethod21",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "6070@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "class31",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 1,
                            "std.sum": 1,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "6083@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "class31.method31",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:class31.method31 (6109@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "6096@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "class31",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "6109@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "class31.method31",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:class31.method31 (6144@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "6122@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "class31",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "6144@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "class31.method31",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "id": "6157@aggregation-aggregation-p3-46/data-46.dt[1]",
                    "scope": "a",
                    "metric": "testClass31",
                    "componentType": "txFailureName",
                    "flags": "[derived]",
                    "measurements": 
                    {
                        "metricType1": 
                        {
                            "std.count": 2,
                            "std.sum": 2,
                            "std.min": 1,
                            "std.max": 1,
                            "std.avg": 1
                        }
                    },
                    "metricChildren": 
                    [
                        {
                            "id": "6170@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "testClass31.testMethod31",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:testClass31.testMethod31 (6196@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        },
                        {
                            "id": "6235@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a",
                            "metric": "testClass31.testMethod33",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 1,
                                    "std.sum": 1,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "scopeChildren": 
                            ["scope:a.b, location:testClass31.testMethod33 (6248@aggregation-aggregation-p3-46/data-46.dt[1])"]
                        }
                    ],
                    "scopeChildren": 
                    [
                        {
                            "id": "6183@aggregation-aggregation-p3-46/data-46.dt[1]",
                            "scope": "a.b",
                            "metric": "testClass31",
                            "componentType": "txFailureName",
                            "flags": "[derived]",
                            "measurements": 
                            {
                                "metricType1": 
                                {
                                    "std.count": 2,
                                    "std.sum": 2,
                                    "std.min": 1,
                                    "std.max": 1,
                                    "std.avg": 1
                                }
                            },
                            "metricChildren": 
                            [
                                {
                                    "id": "6196@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "testClass31.testMethod31",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:testClass31.testMethod31 (6222@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                },
                                {
                                    "id": "6248@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b",
                                    "metric": "testClass31.testMethod33",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 1,
                                            "std.sum": 1,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "scopeChildren": 
                                    ["scope:a.b.primary, location:testClass31.testMethod33 (6261@aggregation-aggregation-p3-46/data-46.dt[1])"]
                                }
                            ],
                            "scopeChildren": 
                            [
                                {
                                    "id": "6209@aggregation-aggregation-p3-46/data-46.dt[1]",
                                    "scope": "a.b.primary",
                                    "metric": "testClass31",
                                    "componentType": "txFailureName",
                                    "flags": "[derived]",
                                    "measurements": 
                                    {
                                        "metricType1": 
                                        {
                                            "std.count": 2,
                                            "std.sum": 2,
                                            "std.min": 1,
                                            "std.max": 1,
                                            "std.avg": 1
                                        }
                                    },
                                    "metricChildren": 
                                    [
                                        {
                                            "id": "6222@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "testClass31.testMethod31",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 2,
                                                    "std.sum": 2,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        },
                                        {
                                            "id": "6261@aggregation-aggregation-p3-46/data-46.dt[1]",
                                            "scope": "a.b.primary",
                                            "metric": "testClass31.testMethod33",
                                            "componentType": "txFailureName",
                                            "flags": "[derived]",
                                            "measurements": 
                                            {
                                                "metricType1": 
                                                {
                                                    "std.count": 1,
                                                    "std.sum": 1,
                                                    "std.min": 1,
                                                    "std.max": 1,
                                                    "std.avg": 1
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "<orphaned>": 
        []
    }
}
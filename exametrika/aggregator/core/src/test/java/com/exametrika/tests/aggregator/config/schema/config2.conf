{	
	modules:
	{
		module1:
		{
			version = "1.0.0"
			schema:
			{
				instanceOf = "AggregationSchema"
				version = 2
				periodTypes:
				{
					p1:
					{
						period:
						{
							kind = "absolute"
							type = "second"
							amount = 10
						}
						cyclePeriodCount = 1
						componentTypes:
						{
							transactionStack1:
							{
								instanceOf = "StackComponentType"
							    ruleRepresentation = null
							}
						
							transactionStack2:
							{
								instanceOf = "StackComponentType"
								hasLog = true
								ruleRepresentation = null
								metricTypes:
								{
									metricType1:
									{
										instanceOf = "Gauge"
									}
								}
								
								filter:
								{
									instanceOf = "TestMeasurementFilter"
								}
								
								stackNameComponentType = "stackName1"
							}
								
							exitPoint1:
							{
								instanceOf = "ExitPointComponentType"
							    ruleRepresentation = null
							}
						
							exitPoint2:
							{
								instanceOf = "ExitPointComponentType"
								hasLog = true
								ruleRepresentation = null
								metricTypes:
								{
									metricType1:
									{
										instanceOf = "Gauge"
									}
								}
								
								filter:
								{
									instanceOf = "TestMeasurementFilter"
								}
								
								stackNameComponentType = "stackName1"
							}
								
							intermediateExitPoint1:
							{
								instanceOf = "IntermediateExitPointComponentType"
							    ruleRepresentation = null
							}
						
							intermediateExitPoint2:
							{
								instanceOf = "IntermediateExitPointComponentType"
								hasLog = true
								ruleRepresentation = null
								metricTypes:
								{
									metricType1:
									{
										instanceOf = "Gauge"
									}
								}
								
								filter:
								{
									instanceOf = "TestMeasurementFilter"
								}
								
								stackNameComponentType = "stackName1"
							}
								
							primaryEntryPoint1:
							{
								instanceOf = "PrimaryEntryPointComponentType"
							    ruleRepresentation = null
							}
						
							primaryEntryPoint2:
							{
								instanceOf = "PrimaryEntryPointComponentType"
								hasLog = true
								ruleRepresentation = null
								metricTypes:
								{
									metricType1:
									{
										instanceOf = "Gauge"
									}
								}
								
								filter:
								{
									instanceOf = "TestMeasurementFilter"
								}
								
								stackNameComponentType = "stackName1"
								scopeAggregationStrategies:
								[
								 	{ instanceOf = "TestScopeAggregationStrategy"}
								]
								
								allowHierarchyAggregation = true
								allowStackNameAggregation = true
								allowTransactionFailureDependenciesAggregation = true
								transactionFailureDependenciesComponentType = "stackError1"
								allowAnomaliesCorrelation = true
								anomaliesComponentType = "test"
							}
								
							secondaryEntryPoint1:
							{
								instanceOf = "SecondaryEntryPointComponentType"
							    ruleRepresentation = null
							}
						
							secondaryEntryPoint2:
							{
								instanceOf = "SecondaryEntryPointComponentType"
								hasLog = true
								ruleRepresentation = null
								metricTypes:
								{
									metricType1:
									{
										instanceOf = "Gauge"
									}
								}
								
								filter:
								{
									instanceOf = "TestMeasurementFilter"
								}
								
								stackNameComponentType = "stackName1"
							}
								
							stackLog1:
							{
								instanceOf = "StackLogComponentType"
							    ruleRepresentation = null
							    hasLog = true
                                metricTypes:
                                {
                                    stackLog1:
                                    {
                                        instanceOf = "Log"
                                    }
                                }
							}
						
							stackLog2:
							{
								instanceOf = "StackLogComponentType"
						        ruleRepresentation = null
								hasLog = true
                                metricTypes:
                                {
                                    stackLog2:
                                    {
                                        instanceOf = "Log"
                                    }
                                }
								
								filter:
								{
									instanceOf = "TestMeasurementFilter"
								}
								
								allowHierarchyAggregation = true
							}
								
							stackError1:
							{
								instanceOf = "StackErrorLogComponentType"
							    ruleRepresentation = null
							}
						
							stackError2:
							{
								instanceOf = "StackErrorLogComponentType"
						        ruleRepresentation = null
								metricType:
								{
									instanceOf = "Log"
								}
								
								filter:
								{
									instanceOf = "TestMeasurementFilter"
								}
								
								allowHierarchyAggregation = true
								allowTypedErrorAggregation = true
								allowTransactionFailureAggregation = true
								errorComponentType = "name1"
								transactionFailureComponentType = "name1"
								stackTraceFilter = "Hello*"
								transactionFailureFilter = "Failure*"
								errorAggregationStrategies:
								[
								 	{ instanceOf = "TestErrorAggregationStrategy"}
								]
								transactionFailureErrorLog = true
							}
						}
					}
				}
			}
		}
	}
}	
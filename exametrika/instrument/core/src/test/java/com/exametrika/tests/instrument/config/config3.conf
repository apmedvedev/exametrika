{	
	common:
	{
		runtimeMode = "production"
	}

	instrumentation:
	{
		pointcuts:
		{
			pointcut1:
			{
				instanceOf = "InterceptPointcut" 
				useParams = true
				kinds = ["enter", "returnExit"]
				intercepted:
				{
					minInstruction = 10
					maxInstruction = 20
					class:
					{
						includeSubclasses = true
						class:
						{
							class = "class"
						}
						annotations:
						[
							{
								class = "class"
							}
						]
						include:
						[
							{
								class = "class"
							}
						]
						exclude:
						[
							{
								class = "class"
							}
						]
					}
					method:
					{
						member:
						{
							member = "member"
						}
						annotations:
						[
							{
								class = "class"
							}
						]
						include:
						[
							{
								member = "member"
							}
						]
						exclude:
						[
							{
								member = "member"
							}
						]
					}
					include:
					[
						{
							class = "class"
							method = "method"
						}
					]
					exclude:
					[	
						{
							class = "class"
							method = "method"
						}
					]
				}
				interceptor:
				{
					instanceOf = "TestInterceptor" 
				}
			}
		
			pointcut2:
			{
				instanceOf = "FieldGetPointcut"
				intercepted:
				{
					class = "class" 
					method = "method"
				}
				
				interceptor:
				{
					instanceOf = "TestInterceptor" 
				}
					
				field:
				{
					class:
					{
						class = "class"
						include:
						[	
							{
								class="class"
							}
						]
						exclude:
						[	
							{
								class = "class"
							}
						]
					}
					
					member:
					{
						member = "member"
						include:
						[	
							{
								member = "member"
							}
						]	
						exclude:
						[	
							{
								member = "member"
							}
						]	
					}
					
					include:
					[	
						{
							class = "class" 
							member = "field"
						}
					]	
					
					exclude:
					[	
						{
							class = "class" 
							member = "field"
						}
					]	
				}
			}
		
			pointcut3:
			{
				instanceOf = "InterceptPointcut" 
				useParams = true 
				kinds = ["enter", "returnExit"]
				enabled = false
				intercepted:
				{
					class = "class" 
					method = "method"
				}
				interceptor:
				{
					instanceOf = "TestInterceptor" 
				}
			}
		}
	}
}
{
	imports = ["exaagent-profiler.conf"]
	
	profiler:
	{
		permanentScopes:
		{
			node:
			{
				type = "default"
			}
		}
		
		measurementStrategies:
		{
			jvm.thread:
			{
				instanceOf = "ExternalMeasurementStrategy"
				enabled = false
			}
			
			jvm.log:
			{
				instanceOf = "ExternalMeasurementStrategy"
				enabled = true
			}
			
			jvm.exception:
			{
				instanceOf = "ExternalMeasurementStrategy"
				enabled = true
			}
			
			jvm.allocation:
			{
				instanceOf = "ExternalMeasurementStrategy"
				enabled = true
			}
			
			jvm.stack:
			{
				instanceOf = "ExternalMeasurementStrategy"
				enabled = true
			}

			jvm.stack2://TODO:
			{
				instanceOf = "ExternalMeasurementStrategy"
				enabled = true//TODO:false
			}
						
			jvm.entry:
			{
				instanceOf = "ExternalMeasurementStrategy"
				enabled = true
			}
		}
		
		monitors:
		{
			jvmKpiMonitor:
			{
				instanceOf = "JvmKpiMonitor"
			}
			
			jvmBufferPoolMonitor:
			{
				instanceOf = "JvmBufferPoolMonitor"
			}
			
			jvmCodeMonitor:
			{
				instanceOf = "JvmCodeMonitor"
			}
			
			jvmMemoryMonitor:
			{
				instanceOf = "JvmSunMemoryMonitor"
			}
			
			jvmThreadMonitor:
			{
				instanceOf = "JvmSunThreadMonitor"
				measurementStrategy = "jvm.thread"
			}
			
			/*generator://TODO:
			{	
				instanceOf = "MeasurementsGeneratorMonitor"
			}*/
		}
		
		probes:
		{
			julProbe:
			{
				instanceOf = "JulProbe"
				measurementStrategy = "jvm.log"
			}
			
			log4jProbe:
			{
				instanceOf = "Log4jProbe"
				measurementStrategy = "jvm.log"
			}
			
			logbackProbe:
			{
				instanceOf = "LogbackProbe"
				measurementStrategy = "jvm.log"
			}
			
			exceptionProbe:
			{
				instanceOf = "ExceptionProbe"
				measurementStrategy = "jvm.exception"
			}
			
			allocationProbe:
			{
				instanceOf = "AllocationProbe"
				measurementStrategy = "jvm.allocation"
			}
			
			stackProbe:
			{
				instanceOf = "StackProbe"
				measurementStrategy = "jvm.stack"
				stackMeasurementStrategy = "jvm.stack2"//TODO:
				minEstimationPeriod = 1000
				maxEstimationPeriod = 20000
				minHotspotCount = 10000
				maxHotspotCount = 20000
				hotspotStep = 1000
				preaggregationPeriod = 1000000000
				combineType = "stack"
				fields:
				{
					standard:
					{
						instanceOf = "StandardFields"
					}
				}
				stackCounters:
				[
					{
						instanceOf = "AppStackCounter"
						type = "ioTime"
					}
					
					{
						instanceOf = "AppStackCounter"
						type = "dbTime"
					}
					
					{
						instanceOf = "AppStackCounter"
						type = "allocationBytes"
					}
					
					{
						instanceOf = "AppStackCounter"
						type = "errorsCount"
					}
				]
				concurrencyLevel:
				{
					fields:
					{
						standard:
						{
							instanceOf = "StandardFields"
						}
					}
				}
			}
			
			fileProbe:
			{
				instanceOf = "FileProbe"
				measurementStrategy = "jvm.stack"
			}
			
			tcpProbe:
			{
				instanceOf = "TcpProbe"
				measurementStrategy = "jvm.stack"
			}
			
			udpProbe:
			{
				instanceOf = "UdpProbe"
				measurementStrategy = "jvm.stack"
			}
			
			jdbcProbe:
			{
				instanceOf = "JdbcProbe"
				measurementStrategy = "jvm.stack"
			}
			
			jdbcConnectionProbe:
			{
				instanceOf = "JdbcConnectionProbe"
				measurementStrategy = "jvm.stack"
			}
			
			threadEntryPointProbe:
			{
				instanceOf = "ThreadEntryPointProbe"
				measurementStrategy = "jvm.stack"
			}
			
			threadExitPointProbe:
			{
				instanceOf = "ThreadExitPointProbe"
				measurementStrategy = "jvm.stack"
			}
			
			httpServletProbe:
			{
				instanceOf = "HttpServletProbe"
				measurementStrategy = "jvm.stack"
				stackMeasurementStrategy = "jvm.entry"
				//allowPrimary = "always"//TODO:
			}
			
			httpConnectionProbe:
			{
				instanceOf = "HttpConnectionProbe"
				measurementStrategy = "jvm.stack"
			}
			
			jmsConsumerProbe:
			{
				instanceOf = "JmsConsumerProbe"
				measurementStrategy = "jvm.stack"
				stackMeasurementStrategy = "jvm.entry"
			}
			
			jmsProducerProbe:
			{
				instanceOf = "JmsProducerProbe"
				measurementStrategy = "jvm.stack"
			}
		}	
	}
}
{	
	test:
	{
		installationPath = "${resource.path}"
		testCases:
		{
			// TODO:
			testCase1:
			{
				tags = ["first"]
				builder:
				{
					instanceOf = "PlatformTestCaseBuilder"
				}
				nodes:
				{
					node1:
					{
						properties:
						{
							key1 = "node1Value1"
							key2 = "node1Value2"
							agentHost = "@{{agentHost}}"
							osType:
							{
								@reference = "@agentProperty"
								@args = { name = "osType" }
							}
						}	
						agent = "testAgent1"
						role = "role1"
						executorName = "platform"
						executorParameters:
						{
							key1 = "value1"
							key2:
							{
								subKey = "value2"
							}
							command:
							{
								@reference = "@shellFile"
								@args = { file = "start" }
							}
						}
					}
					
					node2:
					{
						properties:
						{
							key1 = "node2Value1"
							key2 = "node2Value2"
							agentHost = "@{{agentHost}}"
							osType:
							{
								@reference = "@agentProperty"
								@args = { name = "osType" }
							}
						}
						agent = "testAgent1"
						role = "role2"
						executorName = "platform"
						executorParameters:
						{
							key1 = "value2"
							key2:
							{
								subKey = "value3"
							}
							command:
							{
								@reference = "@shellFile"
								@args = { file = "start" }
							}
						}
					}
					
					node3:
					{
						properties:
						{
							key1 = "node3Value1"
							key2 = "node3Value2"
							agentHost = "@{{agentHost}}"
							osType:
							{
								@reference = "@agentProperty"
								@args = { name = "osType" }
							}
						}
						agent = "testAgent2"
						role = "role1"
						executorName = "platform"
						executorParameters:
						{
							key1 = "value4"
							key2:
							{
								subKey = "value5"
							}
							command:
							{
								@reference = "@shellFile"
								@args = { file = "start" }
							}
						}
					}
				}
				startSteps:
				[
					{
						nodes = ["node1", "node3"]
						period = 20000
					}
					{
						nodes = ["node2"]
						period = 20000
					}
				]
				duration = 30000
			}
			testCase2:
			{
				builder:
				{
					instanceOf = "PlatformTestCaseBuilder"
				}
				nodes:
				{
					node1:
					{
						properties:
						{
							key1 = "node1Value1"
							key2 = "node1Value2"
							agentHost = "@{{agentHost}}"
							osType:
							{
								@reference = "@agentProperty"
								@args = { name = "osType" }
							}
						}	
						agent = "testAgent1"
						role = "role1"
						executorName = "platform"
						executorParameters:
						{
							key1 = "value1"
							key2:
							{
								subKey = "value2"
							}
							command:
							{
								@reference = "@shellFile"
								@args = { file = "start" }
							}
						}	
					}
					
					node2:
					{
						properties:
						{
							key1 = "node1Value1"
							key2 = "node1Value2"
							agentHost = "@{{agentHost}}"
							osType:
							{
								@reference = "@agentProperty"
								@args = { name = "osType" }
							}
						}
						agent = "testAgent1"
						role = "role2"
						executorName = "platform"
						executorParameters:
						{
							key1 = "value2"
							key2:
							{
								subKey = "value3"
							}
							command:
							{
								@reference = "@shellFile"
								@args = { file = "start" }
							}
						}
					}
					
					node3:
					{
						properties:
						{
							key1 = "node1Value1"
							key2 = "node1Value2"
							agentHost = "@{{agentHost}}"
							osType:
							{
								@reference = "@agentProperty"
								@args = { name = "osType" }
							}
						}
						agent = "testAgent2"
						role = "role1"
						executorName = "platform"
						executorParameters:
						{
							key1 = "value3"
							key2:
							{
								subKey = "value4"
							}
							command:
							{
								@reference = "@shellFile"
								@args = { file = "start" }
							}
						}
					}
				}
				startSteps:
				[
					{
						nodes = ["node1", "node3"]
						period = 20000
					}
					{
						nodes = ["node2"]
						period = 20000
					}
				]
				duration = 30000
			}
		}
	}
}

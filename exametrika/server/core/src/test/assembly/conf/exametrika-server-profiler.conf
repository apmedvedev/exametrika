{	
	imports = ["logging-server-profiler.conf", "profiles/server-profiler-min/exaserver-profiler.conf"]//TODO:prod
	
	server:
	{
		channel:
		{
			port = 17171
			secured = true
			keyStorePath = "${resource.path}/keystore.jks"
			keyStorePassword = "testtest"
		}
		
		database:
		{
			paths = ["${com.exametrika.workPath}/db"]
			initialSchemaPath = "${com.exametrika.home}/conf/profiles/server-profiler-min/schema.dbmodule"//TODO:prod
		    flushPeriod = 30000
		    resourceAllocator:
		    {
				instanceOf = "RootResourceAllocator"
				resourceProvider:
				{
					instanceOf = "PercentageResourceProvider"
					percentage = 30//TODO:50
					resourceProvider:
					{
						instanceOf = "MemoryResourceProvider"
					}
				}
			}
		}
	}
	
	webServer:
	{
		port = 8443
		unsecuredPort = 8080
		secured = true
		keyStorePath = "${resource.path}/keystore-web.jks"
		keyStorePassword = "testtest"
	}
	
	profiler:
	{
		permanentScopes:
		{
			server:
			{
				type = "server"
			}
		}
		
		probes:
		{
			stackProbe:
			{
				instanceOf = "StackProbe"
				scopeType = "server"
				minEstimationPeriod = 5000
				maxEstimationPeriod = 60000
				minHotspotCount=100000
				maxHotspotCount = 100000
				hotspotStep = 1000
				preaggregationPeriod = 60000
				tolerableOverhead = 10
				combineType = "stack"
				intercepted:
				{
					class:
					{
						include = ["com.exametrika.impl.aggregator.*", "com.exametrika.impl.component.*", "com.exametrika.impl.exadb.*", "com.exametrika.common.rawdb.*"]
						exclude = ["java.*", "sun.*", "javax.*", "com.sun.*", "jdk.*"] 
					}
					method = "*"
				}
				fields:
				{
					standard:
					{
						instanceOf = "StandardFields"
					}
				}
				concurrencyLevel:
				{
					enabled = false
				}
			}
			
			methodEntryProbe:
			{
				instanceOf = "MethodEntryPointProbe"
				scopeType = "server"
				intercepted:
				{
					class = "*AggregationService"
					method: 
					{
						include = ["closePeriod(*", "aggregate(*" ]
					}
				}
			}
			methodExitProbe:
			{
				instanceOf = "MethodExitPointProbe"
				scopeType = "server"
				intercepted:
				{
					class = "*AggregationService"
					method = "closeFields*"
				}
			}
		}
	}
	
	instrumentation:
	{
		debug = true
	}
}
